{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/jquery/dist/jquery.js","node_modules/spin.js/spin.js","src/Toolkit.js","src/app.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\r\n * jQuery JavaScript Library v3.3.1\r\n * https://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * https://sizzlejs.com/\r\n *\r\n * Copyright JS Foundation and other contributors\r\n * Released under the MIT license\r\n * https://jquery.org/license\r\n *\r\n * Date: 2018-01-20T17:24Z\r\n */\r\n( function( global, factory ) {\r\n\r\n\t\"use strict\";\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\r\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\r\n\t\t// is present, execute the factory and get jQuery.\r\n\t\t// For environments that do not have a `window` with a `document`\r\n\t\t// (such as Node.js), expose a factory as module.exports.\r\n\t\t// This accentuates the need for the creation of a real `window`.\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket #14549 for more info.\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\r\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\r\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\r\n// enough that all such attempts are guarded in a try block.\r\n\"use strict\";\r\n\r\nvar arr = [];\r\n\r\nvar document = window.document;\r\n\r\nvar getProto = Object.getPrototypeOf;\r\n\r\nvar slice = arr.slice;\r\n\r\nvar concat = arr.concat;\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar fnToString = hasOwn.toString;\r\n\r\nvar ObjectFunctionString = fnToString.call( Object );\r\n\r\nvar support = {};\r\n\r\nvar isFunction = function isFunction( obj ) {\r\n\r\n      // Support: Chrome <=57, Firefox <=52\r\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\r\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\r\n      // We don't want to classify *any* DOM node as a function.\r\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\r\n  };\r\n\r\n\r\nvar isWindow = function isWindow( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t};\r\n\r\n\r\n\r\n\r\n\tvar preservedScriptAttributes = {\r\n\t\ttype: true,\r\n\t\tsrc: true,\r\n\t\tnoModule: true\r\n\t};\r\n\r\n\tfunction DOMEval( code, doc, node ) {\r\n\t\tdoc = doc || document;\r\n\r\n\t\tvar i,\r\n\t\t\tscript = doc.createElement( \"script\" );\r\n\r\n\t\tscript.text = code;\r\n\t\tif ( node ) {\r\n\t\t\tfor ( i in preservedScriptAttributes ) {\r\n\t\t\t\tif ( node[ i ] ) {\r\n\t\t\t\t\tscript[ i ] = node[ i ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\r\n\t}\r\n\r\n\r\nfunction toType( obj ) {\r\n\tif ( obj == null ) {\r\n\t\treturn obj + \"\";\r\n\t}\r\n\r\n\t// Support: Android <=2.3 only (functionish RegExp)\r\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\r\n\t\ttypeof obj;\r\n}\r\n/* global Symbol */\r\n// Defining this global in .eslintrc.json would create a danger of using the global\r\n// unguarded in another place, it seems safer to define global only for this module\r\n\r\n\r\n\r\nvar\r\n\tversion = \"3.3.1\",\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t},\r\n\r\n\t// Support: Android <=4.0 only\r\n\t// Make sure we trim BOM and NBSP\r\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\r\n\t\t// Return all the elements in a clean array\r\n\t\tif ( num == null ) {\r\n\t\t\treturn slice.call( this );\r\n\t\t}\r\n\r\n\t\t// Return just the one element from the set\r\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\teach: function( callback ) {\r\n\t\treturn jQuery.each( this, callback );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t} ) );\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor();\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[ 0 ] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// Skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// Extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( ( options = arguments[ i ] ) != null ) {\r\n\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tsrc = target[ name ];\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\r\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\r\n\r\n\t\t\t\t\tif ( copyIsArray ) {\r\n\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\t\tvar proto, Ctor;\r\n\r\n\t\t// Detect obvious negatives\r\n\t\t// Use toString instead of jQuery.type to catch host objects\r\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tproto = getProto( obj );\r\n\r\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\r\n\t\tif ( !proto ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\r\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\r\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\r\n\t\t/* eslint-disable no-unused-vars */\r\n\t\t// See https://github.com/eslint/eslint/issues/6125\r\n\t\tvar name;\r\n\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// Evaluates a script in a global context\r\n\tglobalEval: function( code ) {\r\n\t\tDOMEval( code );\r\n\t},\r\n\r\n\teach: function( obj, callback ) {\r\n\t\tvar length, i = 0;\r\n\r\n\t\tif ( isArrayLike( obj ) ) {\r\n\t\t\tlength = obj.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor ( i in obj ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t// Support: Android <=4.0 only\r\n\ttrim: function( text ) {\r\n\t\treturn text == null ?\r\n\t\t\t\"\" :\r\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar length, value,\r\n\t\t\ti = 0,\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArrayLike( elems ) ) {\r\n\t\t\tlength = elems.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn concat.apply( [], ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n} );\r\n\r\nif ( typeof Symbol === \"function\" ) {\r\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\r\n}\r\n\r\n// Populate the class2type map\r\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\r\nfunction( i, name ) {\r\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n} );\r\n\r\nfunction isArrayLike( obj ) {\r\n\r\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\r\n\t// `in` check used to prevent JIT error (gh-2145)\r\n\t// hasOwn isn't used here due to false negatives\r\n\t// regarding Nodelist length in IE\r\n\tvar length = !!obj && \"length\" in obj && obj.length,\r\n\t\ttype = toType( obj );\r\n\r\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\nvar Sizzle =\r\n/*!\r\n * Sizzle CSS Selector Engine v2.3.3\r\n * https://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2016-08-08\r\n */\r\n(function( window ) {\r\n\r\nvar i,\r\n\tsupport,\r\n\tExpr,\r\n\tgetText,\r\n\tisXML,\r\n\ttokenize,\r\n\tcompile,\r\n\tselect,\r\n\toutermostContext,\r\n\tsortInput,\r\n\thasDuplicate,\r\n\r\n\t// Local document vars\r\n\tsetDocument,\r\n\tdocument,\r\n\tdocElem,\r\n\tdocumentIsHTML,\r\n\trbuggyQSA,\r\n\trbuggyMatches,\r\n\tmatches,\r\n\tcontains,\r\n\r\n\t// Instance-specific data\r\n\texpando = \"sizzle\" + 1 * new Date(),\r\n\tpreferredDoc = window.document,\r\n\tdirruns = 0,\r\n\tdone = 0,\r\n\tclassCache = createCache(),\r\n\ttokenCache = createCache(),\r\n\tcompilerCache = createCache(),\r\n\tsortOrder = function( a, b ) {\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t// Instance methods\r\n\thasOwn = ({}).hasOwnProperty,\r\n\tarr = [],\r\n\tpop = arr.pop,\r\n\tpush_native = arr.push,\r\n\tpush = arr.push,\r\n\tslice = arr.slice,\r\n\t// Use a stripped-down indexOf as it's faster than native\r\n\t// https://jsperf.com/thor-indexof-vs-for/5\r\n\tindexOf = function( list, elem ) {\r\n\t\tvar i = 0,\r\n\t\t\tlen = list.length;\r\n\t\tfor ( ; i < len; i++ ) {\r\n\t\t\tif ( list[i] === elem ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\r\n\r\n\t// Regular expressions\r\n\r\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\r\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n\r\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\r\n\r\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\r\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\r\n\t\t// Operator (capture 2)\r\n\t\t\"*([*^$|!~]?=)\" + whitespace +\r\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\r\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\r\n\t\t\"*\\\\]\",\r\n\r\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\r\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\r\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\r\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\r\n\t\t// 2. simple (capture 6)\r\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\r\n\t\t// 3. anything else (capture 2)\r\n\t\t\".*\" +\r\n\t\t\")\\\\)|)\",\r\n\r\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\r\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\r\n\r\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\r\n\r\n\trpseudo = new RegExp( pseudos ),\r\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n\tmatchExpr = {\r\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\r\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\r\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\r\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\r\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\r\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n\t\t// For use in libraries implementing .is()\r\n\t\t// We use this for POS matching in `select`\r\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\r\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n\t},\r\n\r\n\trinputs = /^(?:input|select|textarea|button)$/i,\r\n\trheader = /^h\\d$/i,\r\n\r\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\r\n\r\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n\trsibling = /[+~]/,\r\n\r\n\t// CSS escapes\r\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\r\n\tfunescape = function( _, escaped, escapedWhitespace ) {\r\n\t\tvar high = \"0x\" + escaped - 0x10000;\r\n\t\t// NaN means non-codepoint\r\n\t\t// Support: Firefox<24\r\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\r\n\t\treturn high !== high || escapedWhitespace ?\r\n\t\t\tescaped :\r\n\t\t\thigh < 0 ?\r\n\t\t\t\t// BMP codepoint\r\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\r\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\r\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n\t},\r\n\r\n\t// CSS string/identifier serialization\r\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\r\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\r\n\tfcssescape = function( ch, asCodePoint ) {\r\n\t\tif ( asCodePoint ) {\r\n\r\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\r\n\t\t\tif ( ch === \"\\0\" ) {\r\n\t\t\t\treturn \"\\uFFFD\";\r\n\t\t\t}\r\n\r\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\r\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\r\n\t\t}\r\n\r\n\t\t// Other potentially-special ASCII characters get backslash-escaped\r\n\t\treturn \"\\\\\" + ch;\r\n\t},\r\n\r\n\t// Used for iframes\r\n\t// See setDocument()\r\n\t// Removing the function wrapper causes a \"Permission Denied\"\r\n\t// error in IE\r\n\tunloadHandler = function() {\r\n\t\tsetDocument();\r\n\t},\r\n\r\n\tdisabledAncestor = addCombinator(\r\n\t\tfunction( elem ) {\r\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\r\n\t\t},\r\n\t\t{ dir: \"parentNode\", next: \"legend\" }\r\n\t);\r\n\r\n// Optimize for push.apply( _, NodeList )\r\ntry {\r\n\tpush.apply(\r\n\t\t(arr = slice.call( preferredDoc.childNodes )),\r\n\t\tpreferredDoc.childNodes\r\n\t);\r\n\t// Support: Android<4.0\r\n\t// Detect silently failing push.apply\r\n\tarr[ preferredDoc.childNodes.length ].nodeType;\r\n} catch ( e ) {\r\n\tpush = { apply: arr.length ?\r\n\r\n\t\t// Leverage slice if possible\r\n\t\tfunction( target, els ) {\r\n\t\t\tpush_native.apply( target, slice.call(els) );\r\n\t\t} :\r\n\r\n\t\t// Support: IE<9\r\n\t\t// Otherwise append directly\r\n\t\tfunction( target, els ) {\r\n\t\t\tvar j = target.length,\r\n\t\t\t\ti = 0;\r\n\t\t\t// Can't trust NodeList.length\r\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\r\n\t\t\ttarget.length = j - 1;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction Sizzle( selector, context, results, seed ) {\r\n\tvar m, i, elem, nid, match, groups, newSelector,\r\n\t\tnewContext = context && context.ownerDocument,\r\n\r\n\t\t// nodeType defaults to 9, since context defaults to document\r\n\t\tnodeType = context ? context.nodeType : 9;\r\n\r\n\tresults = results || [];\r\n\r\n\t// Return early from calls with invalid selector or context\r\n\tif ( typeof selector !== \"string\" || !selector ||\r\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\r\n\tif ( !seed ) {\r\n\r\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n\t\t\tsetDocument( context );\r\n\t\t}\r\n\t\tcontext = context || document;\r\n\r\n\t\tif ( documentIsHTML ) {\r\n\r\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\r\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\r\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\r\n\r\n\t\t\t\t// ID selector\r\n\t\t\t\tif ( (m = match[1]) ) {\r\n\r\n\t\t\t\t\t// Document context\r\n\t\t\t\t\tif ( nodeType === 9 ) {\r\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\r\n\r\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\t\tif ( elem.id === m ) {\r\n\t\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Element context\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\r\n\t\t\t\t\t\t\tcontains( context, elem ) &&\r\n\t\t\t\t\t\t\telem.id === m ) {\r\n\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Type selector\r\n\t\t\t\t} else if ( match[2] ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\r\n\t\t\t\t\treturn results;\r\n\r\n\t\t\t\t// Class selector\r\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\r\n\t\t\t\t\tcontext.getElementsByClassName ) {\r\n\r\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Take advantage of querySelectorAll\r\n\t\t\tif ( support.qsa &&\r\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\r\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\r\n\r\n\t\t\t\tif ( nodeType !== 1 ) {\r\n\t\t\t\t\tnewContext = context;\r\n\t\t\t\t\tnewSelector = selector;\r\n\r\n\t\t\t\t// qSA looks outside Element context, which is not what we want\r\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\r\n\t\t\t\t// Support: IE <=8\r\n\t\t\t\t// Exclude object elements\r\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\r\n\r\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\r\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\r\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prefix every selector in the list\r\n\t\t\t\t\tgroups = tokenize( selector );\r\n\t\t\t\t\ti = groups.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewSelector = groups.join( \",\" );\r\n\r\n\t\t\t\t\t// Expand context for sibling selectors\r\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\r\n\t\t\t\t\t\tcontext;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( newSelector ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tpush.apply( results,\r\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t} catch ( qsaError ) {\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif ( nid === expando ) {\r\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// All others\r\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\r\n}\r\n\r\n/**\r\n * Create key-value caches of limited size\r\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\r\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n *\tdeleting the oldest entry\r\n */\r\nfunction createCache() {\r\n\tvar keys = [];\r\n\r\n\tfunction cache( key, value ) {\r\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\r\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\r\n\t\t\t// Only keep the most recent entries\r\n\t\t\tdelete cache[ keys.shift() ];\r\n\t\t}\r\n\t\treturn (cache[ key + \" \" ] = value);\r\n\t}\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Mark a function for special use by Sizzle\r\n * @param {Function} fn The function to mark\r\n */\r\nfunction markFunction( fn ) {\r\n\tfn[ expando ] = true;\r\n\treturn fn;\r\n}\r\n\r\n/**\r\n * Support testing using an element\r\n * @param {Function} fn Passed the created element and returns a boolean result\r\n */\r\nfunction assert( fn ) {\r\n\tvar el = document.createElement(\"fieldset\");\r\n\r\n\ttry {\r\n\t\treturn !!fn( el );\r\n\t} catch (e) {\r\n\t\treturn false;\r\n\t} finally {\r\n\t\t// Remove from its parent by default\r\n\t\tif ( el.parentNode ) {\r\n\t\t\tel.parentNode.removeChild( el );\r\n\t\t}\r\n\t\t// release memory in IE\r\n\t\tel = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds the same handler for all of the specified attrs\r\n * @param {String} attrs Pipe-separated list of attributes\r\n * @param {Function} handler The method that will be applied\r\n */\r\nfunction addHandle( attrs, handler ) {\r\n\tvar arr = attrs.split(\"|\"),\r\n\t\ti = arr.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tExpr.attrHandle[ arr[i] ] = handler;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks document order of two siblings\r\n * @param {Element} a\r\n * @param {Element} b\r\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n */\r\nfunction siblingCheck( a, b ) {\r\n\tvar cur = b && a,\r\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\r\n\t\t\ta.sourceIndex - b.sourceIndex;\r\n\r\n\t// Use IE sourceIndex if available on both nodes\r\n\tif ( diff ) {\r\n\t\treturn diff;\r\n\t}\r\n\r\n\t// Check if b follows a\r\n\tif ( cur ) {\r\n\t\twhile ( (cur = cur.nextSibling) ) {\r\n\t\t\tif ( cur === b ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a ? 1 : -1;\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for input types\r\n * @param {String} type\r\n */\r\nfunction createInputPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn name === \"input\" && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for buttons\r\n * @param {String} type\r\n */\r\nfunction createButtonPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for :enabled/:disabled\r\n * @param {Boolean} disabled true for :disabled; false for :enabled\r\n */\r\nfunction createDisabledPseudo( disabled ) {\r\n\r\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\r\n\treturn function( elem ) {\r\n\r\n\t\t// Only certain elements can match :enabled or :disabled\r\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\r\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\r\n\t\tif ( \"form\" in elem ) {\r\n\r\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\r\n\t\t\t// * listed form-associated elements in a disabled fieldset\r\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\r\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\r\n\t\t\t// * option elements in a disabled optgroup\r\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\r\n\t\t\t// All such elements have a \"form\" property.\r\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\r\n\r\n\t\t\t\t// Option elements defer to a parent optgroup if present\r\n\t\t\t\tif ( \"label\" in elem ) {\r\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\r\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn elem.disabled === disabled;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: IE 6 - 11\r\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\r\n\t\t\t\treturn elem.isDisabled === disabled ||\r\n\r\n\t\t\t\t\t// Where there is no isDisabled, check manually\r\n\t\t\t\t\t/* jshint -W018 */\r\n\t\t\t\t\telem.isDisabled !== !disabled &&\r\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.disabled === disabled;\r\n\r\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\r\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\r\n\t\t// even exist on them, let alone have a boolean value.\r\n\t\t} else if ( \"label\" in elem ) {\r\n\t\t\treturn elem.disabled === disabled;\r\n\t\t}\r\n\r\n\t\t// Remaining elements are neither :enabled nor :disabled\r\n\t\treturn false;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for positionals\r\n * @param {Function} fn\r\n */\r\nfunction createPositionalPseudo( fn ) {\r\n\treturn markFunction(function( argument ) {\r\n\t\targument = +argument;\r\n\t\treturn markFunction(function( seed, matches ) {\r\n\t\t\tvar j,\r\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\r\n\t\t\t\ti = matchIndexes.length;\r\n\r\n\t\t\t// Match elements found at the specified indexes\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\r\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks a node for validity as a Sizzle context\r\n * @param {Element|Object=} context\r\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n */\r\nfunction testContext( context ) {\r\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\r\n}\r\n\r\n// Expose support vars for convenience\r\nsupport = Sizzle.support = {};\r\n\r\n/**\r\n * Detects XML nodes\r\n * @param {Element|Object} elem An element or a document\r\n * @returns {Boolean} True iff elem is a non-HTML XML node\r\n */\r\nisXML = Sizzle.isXML = function( elem ) {\r\n\t// documentElement is verified for cases where it doesn't yet exist\r\n\t// (such as loading iframes in IE - #4833)\r\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n};\r\n\r\n/**\r\n * Sets document-related variables once based on the current document\r\n * @param {Element|Object} [doc] An element or document object to use to set the document\r\n * @returns {Object} Returns the current document\r\n */\r\nsetDocument = Sizzle.setDocument = function( node ) {\r\n\tvar hasCompare, subWindow,\r\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\r\n\r\n\t// Return early if doc is invalid or already selected\r\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n\t\treturn document;\r\n\t}\r\n\r\n\t// Update global variables\r\n\tdocument = doc;\r\n\tdocElem = document.documentElement;\r\n\tdocumentIsHTML = !isXML( document );\r\n\r\n\t// Support: IE 9-11, Edge\r\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\r\n\tif ( preferredDoc !== document &&\r\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\r\n\r\n\t\t// Support: IE 11, Edge\r\n\t\tif ( subWindow.addEventListener ) {\r\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\r\n\r\n\t\t// Support: IE 9 - 10 only\r\n\t\t} else if ( subWindow.attachEvent ) {\r\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Attributes\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Support: IE<8\r\n\t// Verify that getAttribute really returns attributes and not properties\r\n\t// (excepting IE8 booleans)\r\n\tsupport.attributes = assert(function( el ) {\r\n\t\tel.className = \"i\";\r\n\t\treturn !el.getAttribute(\"className\");\r\n\t});\r\n\r\n\t/* getElement(s)By*\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Check if getElementsByTagName(\"*\") returns only elements\r\n\tsupport.getElementsByTagName = assert(function( el ) {\r\n\t\tel.appendChild( document.createComment(\"\") );\r\n\t\treturn !el.getElementsByTagName(\"*\").length;\r\n\t});\r\n\r\n\t// Support: IE<9\r\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\r\n\r\n\t// Support: IE<10\r\n\t// Check if getElementById returns elements by name\r\n\t// The broken getElementById methods don't pick up programmatically-set names,\r\n\t// so use a roundabout getElementsByName test\r\n\tsupport.getById = assert(function( el ) {\r\n\t\tdocElem.appendChild( el ).id = expando;\r\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\r\n\t});\r\n\r\n\t// ID filter and find\r\n\tif ( support.getById ) {\r\n\t\tExpr.filter[\"ID\"] = function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t\tExpr.find[\"ID\"] = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar elem = context.getElementById( id );\r\n\t\t\t\treturn elem ? [ elem ] : [];\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tExpr.filter[\"ID\"] =  function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\r\n\t\t\t\t\telem.getAttributeNode(\"id\");\r\n\t\t\t\treturn node && node.value === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t// Support: IE 6 - 7 only\r\n\t\t// getElementById is not reliable as a find shortcut\r\n\t\tExpr.find[\"ID\"] = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar node, i, elems,\r\n\t\t\t\t\telem = context.getElementById( id );\r\n\r\n\t\t\t\tif ( elem ) {\r\n\r\n\t\t\t\t\t// Verify the id attribute\r\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\r\n\t\t\t\t\tif ( node && node.value === id ) {\r\n\t\t\t\t\t\treturn [ elem ];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Fall back on getElementsByName\r\n\t\t\t\t\telems = context.getElementsByName( id );\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\r\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\r\n\t\t\t\t\t\tif ( node && node.value === id ) {\r\n\t\t\t\t\t\t\treturn [ elem ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// Tag\r\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\r\n\t\tfunction( tag, context ) {\r\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\t\t\treturn context.getElementsByTagName( tag );\r\n\r\n\t\t\t// DocumentFragment nodes don't have gEBTN\r\n\t\t\t} else if ( support.qsa ) {\r\n\t\t\t\treturn context.querySelectorAll( tag );\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\tfunction( tag, context ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ttmp = [],\r\n\t\t\t\ti = 0,\r\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\r\n\t\t\t\tresults = context.getElementsByTagName( tag );\r\n\r\n\t\t\t// Filter out possible comments\r\n\t\t\tif ( tag === \"*\" ) {\r\n\t\t\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\ttmp.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t// Class\r\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\r\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\r\n\t\t\treturn context.getElementsByClassName( className );\r\n\t\t}\r\n\t};\r\n\r\n\t/* QSA/matchesSelector\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// QSA and matchesSelector support\r\n\r\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n\trbuggyMatches = [];\r\n\r\n\t// qSa(:focus) reports false when true (Chrome 21)\r\n\t// We allow this because of a bug in IE8/9 that throws an error\r\n\t// whenever `document.activeElement` is accessed on an iframe\r\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\r\n\t// See https://bugs.jquery.com/ticket/13378\r\n\trbuggyQSA = [];\r\n\r\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\r\n\t\t// Build QSA regex\r\n\t\t// Regex strategy adopted from Diego Perini\r\n\t\tassert(function( el ) {\r\n\t\t\t// Select is set to empty string on purpose\r\n\t\t\t// This is to test IE's treatment of not explicitly\r\n\t\t\t// setting a boolean content attribute,\r\n\t\t\t// since its presence should be enough\r\n\t\t\t// https://bugs.jquery.com/ticket/12359\r\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\r\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\r\n\t\t\t\t\"<option selected=''></option></select>\";\r\n\r\n\t\t\t// Support: IE8, Opera 11-12.16\r\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\r\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\r\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\r\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\r\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\r\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\"~=\");\r\n\t\t\t}\r\n\r\n\t\t\t// Webkit/Opera - :checked should return selected option elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\r\n\t\t\t\trbuggyQSA.push(\":checked\");\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Safari 8+, iOS 8+\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\r\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\r\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tassert(function( el ) {\r\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\r\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\r\n\r\n\t\t\t// Support: Windows 8 Native Apps\r\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\r\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Enforce case-sensitivity of name attribute\r\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\r\n\t\t\t}\r\n\r\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\r\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE9-11+\r\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\r\n\t\t\tdocElem.appendChild( el ).disabled = true;\r\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\r\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\r\n\t\t\tel.querySelectorAll(\"*,:x\");\r\n\t\t\trbuggyQSA.push(\",.*:\");\r\n\t\t});\r\n\t}\r\n\r\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\r\n\t\tdocElem.webkitMatchesSelector ||\r\n\t\tdocElem.mozMatchesSelector ||\r\n\t\tdocElem.oMatchesSelector ||\r\n\t\tdocElem.msMatchesSelector) )) ) {\r\n\r\n\t\tassert(function( el ) {\r\n\t\t\t// Check to see if it's possible to do matchesSelector\r\n\t\t\t// on a disconnected node (IE 9)\r\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\r\n\r\n\t\t\t// This should fail with an exception\r\n\t\t\t// Gecko does not error, returns false instead\r\n\t\t\tmatches.call( el, \"[s!='']:x\" );\r\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\r\n\t\t});\r\n\t}\r\n\r\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\r\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n\t/* Contains\r\n\t---------------------------------------------------------------------- */\r\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\r\n\r\n\t// Element contains another\r\n\t// Purposefully self-exclusive\r\n\t// As in, an element does not contain itself\r\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\r\n\t\tfunction( a, b ) {\r\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\r\n\t\t\t\tbup = b && b.parentNode;\r\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\r\n\t\t\t\tadown.contains ?\r\n\t\t\t\t\tadown.contains( bup ) :\r\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n\t\t\t));\r\n\t\t} :\r\n\t\tfunction( a, b ) {\r\n\t\t\tif ( b ) {\r\n\t\t\t\twhile ( (b = b.parentNode) ) {\r\n\t\t\t\t\tif ( b === a ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t/* Sorting\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Document order sorting\r\n\tsortOrder = hasCompare ?\r\n\tfunction( a, b ) {\r\n\r\n\t\t// Flag for duplicate removal\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Sort on method existence if only one input has compareDocumentPosition\r\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\r\n\t\tif ( compare ) {\r\n\t\t\treturn compare;\r\n\t\t}\r\n\r\n\t\t// Calculate position if both inputs belong to the same document\r\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\r\n\t\t\ta.compareDocumentPosition( b ) :\r\n\r\n\t\t\t// Otherwise we know they are disconnected\r\n\t\t\t1;\r\n\r\n\t\t// Disconnected nodes\r\n\t\tif ( compare & 1 ||\r\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\r\n\r\n\t\t\t// Choose the first element that is related to our preferred document\r\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Maintain original order\r\n\t\t\treturn sortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\t\t}\r\n\r\n\t\treturn compare & 4 ? -1 : 1;\r\n\t} :\r\n\tfunction( a, b ) {\r\n\t\t// Exit early if the nodes are identical\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\taup = a.parentNode,\r\n\t\t\tbup = b.parentNode,\r\n\t\t\tap = [ a ],\r\n\t\t\tbp = [ b ];\r\n\r\n\t\t// Parentless nodes are either documents or disconnected\r\n\t\tif ( !aup || !bup ) {\r\n\t\t\treturn a === document ? -1 :\r\n\t\t\t\tb === document ? 1 :\r\n\t\t\t\taup ? -1 :\r\n\t\t\t\tbup ? 1 :\r\n\t\t\t\tsortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\r\n\t\t// If the nodes are siblings, we can do a quick check\r\n\t\t} else if ( aup === bup ) {\r\n\t\t\treturn siblingCheck( a, b );\r\n\t\t}\r\n\r\n\t\t// Otherwise we need full lists of their ancestors for comparison\r\n\t\tcur = a;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tap.unshift( cur );\r\n\t\t}\r\n\t\tcur = b;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tbp.unshift( cur );\r\n\t\t}\r\n\r\n\t\t// Walk down the tree looking for a discrepancy\r\n\t\twhile ( ap[i] === bp[i] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i ?\r\n\t\t\t// Do a sibling check if the nodes have a common ancestor\r\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\r\n\r\n\t\t\t// Otherwise nodes in our document sort first\r\n\t\t\tap[i] === preferredDoc ? -1 :\r\n\t\t\tbp[i] === preferredDoc ? 1 :\r\n\t\t\t0;\r\n\t};\r\n\r\n\treturn document;\r\n};\r\n\r\nSizzle.matches = function( expr, elements ) {\r\n\treturn Sizzle( expr, null, null, elements );\r\n};\r\n\r\nSizzle.matchesSelector = function( elem, expr ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\t// Make sure that attribute selectors are quoted\r\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\r\n\r\n\tif ( support.matchesSelector && documentIsHTML &&\r\n\t\t!compilerCache[ expr + \" \" ] &&\r\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\r\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n\t\ttry {\r\n\t\t\tvar ret = matches.call( elem, expr );\r\n\r\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\r\n\t\t\tif ( ret || support.disconnectedMatch ||\r\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n\t\t\t\t\t// fragment in IE 9\r\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\r\n};\r\n\r\nSizzle.contains = function( context, elem ) {\r\n\t// Set document vars if needed\r\n\tif ( ( context.ownerDocument || context ) !== document ) {\r\n\t\tsetDocument( context );\r\n\t}\r\n\treturn contains( context, elem );\r\n};\r\n\r\nSizzle.attr = function( elem, name ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\r\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\r\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n\t\t\tfn( elem, name, !documentIsHTML ) :\r\n\t\t\tundefined;\r\n\r\n\treturn val !== undefined ?\r\n\t\tval :\r\n\t\tsupport.attributes || !documentIsHTML ?\r\n\t\t\telem.getAttribute( name ) :\r\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\r\n\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n};\r\n\r\nSizzle.escape = function( sel ) {\r\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\r\n};\r\n\r\nSizzle.error = function( msg ) {\r\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\n/**\r\n * Document sorting and removing duplicates\r\n * @param {ArrayLike} results\r\n */\r\nSizzle.uniqueSort = function( results ) {\r\n\tvar elem,\r\n\t\tduplicates = [],\r\n\t\tj = 0,\r\n\t\ti = 0;\r\n\r\n\t// Unless we *know* we can detect duplicates, assume their presence\r\n\thasDuplicate = !support.detectDuplicates;\r\n\tsortInput = !support.sortStable && results.slice( 0 );\r\n\tresults.sort( sortOrder );\r\n\r\n\tif ( hasDuplicate ) {\r\n\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\tif ( elem === results[ i ] ) {\r\n\t\t\t\tj = duplicates.push( i );\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( j-- ) {\r\n\t\t\tresults.splice( duplicates[ j ], 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear input after sorting to release objects\r\n\t// See https://github.com/jquery/sizzle/pull/225\r\n\tsortInput = null;\r\n\r\n\treturn results;\r\n};\r\n\r\n/**\r\n * Utility function for retrieving the text value of an array of DOM nodes\r\n * @param {Array|Element} elem\r\n */\r\ngetText = Sizzle.getText = function( elem ) {\r\n\tvar node,\r\n\t\tret = \"\",\r\n\t\ti = 0,\r\n\t\tnodeType = elem.nodeType;\r\n\r\n\tif ( !nodeType ) {\r\n\t\t// If no nodeType, this is expected to be an array\r\n\t\twhile ( (node = elem[i++]) ) {\r\n\t\t\t// Do not traverse comment nodes\r\n\t\t\tret += getText( node );\r\n\t\t}\r\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n\t\t// Use textContent for elements\r\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\r\n\t\tif ( typeof elem.textContent === \"string\" ) {\r\n\t\t\treturn elem.textContent;\r\n\t\t} else {\r\n\t\t\t// Traverse its children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tret += getText( elem );\r\n\t\t\t}\r\n\t\t}\r\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\r\n\t\treturn elem.nodeValue;\r\n\t}\r\n\t// Do not include comment or processing instruction nodes\r\n\r\n\treturn ret;\r\n};\r\n\r\nExpr = Sizzle.selectors = {\r\n\r\n\t// Can be adjusted by the user\r\n\tcacheLength: 50,\r\n\r\n\tcreatePseudo: markFunction,\r\n\r\n\tmatch: matchExpr,\r\n\r\n\tattrHandle: {},\r\n\r\n\tfind: {},\r\n\r\n\trelative: {\r\n\t\t\">\": { dir: \"parentNode\", first: true },\r\n\t\t\" \": { dir: \"parentNode\" },\r\n\t\t\"+\": { dir: \"previousSibling\", first: true },\r\n\t\t\"~\": { dir: \"previousSibling\" }\r\n\t},\r\n\r\n\tpreFilter: {\r\n\t\t\"ATTR\": function( match ) {\r\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\r\n\r\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\r\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\r\n\r\n\t\t\tif ( match[2] === \"~=\" ) {\r\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\r\n\t\t\t}\r\n\r\n\t\t\treturn match.slice( 0, 4 );\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( match ) {\r\n\t\t\t/* matches from matchExpr[\"CHILD\"]\r\n\t\t\t\t1 type (only|nth|...)\r\n\t\t\t\t2 what (child|of-type)\r\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n\t\t\t\t5 sign of xn-component\r\n\t\t\t\t6 x of xn-component\r\n\t\t\t\t7 sign of y-component\r\n\t\t\t\t8 y of y-component\r\n\t\t\t*/\r\n\t\t\tmatch[1] = match[1].toLowerCase();\r\n\r\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\r\n\t\t\t\t// nth-* requires argument\r\n\t\t\t\tif ( !match[3] ) {\r\n\t\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\r\n\t\t\t\t// remember that false/true cast respectively to 0/1\r\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\r\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\r\n\r\n\t\t\t// other types prohibit arguments\r\n\t\t\t} else if ( match[3] ) {\r\n\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t}\r\n\r\n\t\t\treturn match;\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( match ) {\r\n\t\t\tvar excess,\r\n\t\t\t\tunquoted = !match[6] && match[2];\r\n\r\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept quoted arguments as-is\r\n\t\t\tif ( match[3] ) {\r\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\r\n\r\n\t\t\t// Strip excess characters from unquoted arguments\r\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\r\n\t\t\t\t// Get excess from tokenize (recursively)\r\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\r\n\t\t\t\t// advance to the next closing parenthesis\r\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n\t\t\t\t// excess is a negative index\r\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\r\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\r\n\t\t\t}\r\n\r\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\r\n\t\t\treturn match.slice( 0, 3 );\r\n\t\t}\r\n\t},\r\n\r\n\tfilter: {\r\n\r\n\t\t\"TAG\": function( nodeNameSelector ) {\r\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn nodeNameSelector === \"*\" ?\r\n\t\t\t\tfunction() { return true; } :\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CLASS\": function( className ) {\r\n\t\t\tvar pattern = classCache[ className + \" \" ];\r\n\r\n\t\t\treturn pattern ||\r\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n\t\t\t\tclassCache( className, function( elem ) {\r\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t\"ATTR\": function( name, operator, check ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar result = Sizzle.attr( elem, name );\r\n\r\n\t\t\t\tif ( result == null ) {\r\n\t\t\t\t\treturn operator === \"!=\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( !operator ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += \"\";\r\n\r\n\t\t\t\treturn operator === \"=\" ? result === check :\r\n\t\t\t\t\toperator === \"!=\" ? result !== check :\r\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\r\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\r\n\t\t\t\t\tfalse;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\r\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\r\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\r\n\t\t\t\tofType = what === \"of-type\";\r\n\r\n\t\t\treturn first === 1 && last === 0 ?\r\n\r\n\t\t\t\t// Shortcut for :nth-*(n)\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn !!elem.parentNode;\r\n\t\t\t\t} :\r\n\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\r\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n\t\t\t\t\t\tparent = elem.parentNode,\r\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\r\n\t\t\t\t\t\tuseCache = !xml && !ofType,\r\n\t\t\t\t\t\tdiff = false;\r\n\r\n\t\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\r\n\t\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\t\twhile ( dir ) {\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\r\n\t\t\t\t\t\t\t\t\tif ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\r\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\r\n\t\t\t\t\t\tif ( forward && useCache ) {\r\n\r\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\r\n\r\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\tnode = parent;\r\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\r\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\r\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\r\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\r\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Use previously-cached element index if available\r\n\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// xml :nth-child(...)\r\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n\t\t\t\t\t\t\tif ( diff === false ) {\r\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\r\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\r\n\t\t\t\t\t\t\t\t\t\t++diff ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\r\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\r\n\t\t\t\t\t\tdiff -= last;\r\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( pseudo, argument ) {\r\n\t\t\t// pseudo-class names are case-insensitive\r\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\r\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n\t\t\t// Remember that setFilters inherits from pseudos\r\n\t\t\tvar args,\r\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n\t\t\t// The user may use createPseudo to indicate that\r\n\t\t\t// arguments are needed to create the filter function\r\n\t\t\t// just as Sizzle does\r\n\t\t\tif ( fn[ expando ] ) {\r\n\t\t\t\treturn fn( argument );\r\n\t\t\t}\r\n\r\n\t\t\t// But maintain support for old signatures\r\n\t\t\tif ( fn.length > 1 ) {\r\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\r\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\r\n\t\t\t\t\t\tvar idx,\r\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\r\n\t\t\t\t\t\t\ti = matched.length;\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\r\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\t\treturn fn( elem, 0, args );\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn fn;\r\n\t\t}\r\n\t},\r\n\r\n\tpseudos: {\r\n\t\t// Potentially complex pseudos\r\n\t\t\"not\": markFunction(function( selector ) {\r\n\t\t\t// Trim the selector passed to compile\r\n\t\t\t// to avoid treating leading and trailing\r\n\t\t\t// spaces as combinators\r\n\t\t\tvar input = [],\r\n\t\t\t\tresults = [],\r\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n\t\t\treturn matcher[ expando ] ?\r\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\r\n\t\t\t\t\tvar elem,\r\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\r\n\t\t\t\t\t\ti = seed.length;\r\n\r\n\t\t\t\t\t// Match elements unmatched by `matcher`\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}) :\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tinput[0] = elem;\r\n\t\t\t\t\tmatcher( input, null, xml, results );\r\n\t\t\t\t\t// Don't keep the element (issue #299)\r\n\t\t\t\t\tinput[0] = null;\r\n\t\t\t\t\treturn !results.pop();\r\n\t\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"has\": markFunction(function( selector ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"contains\": markFunction(function( text ) {\r\n\t\t\ttext = text.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// \"Whether an element is represented by a :lang() selector\r\n\t\t// is based solely on the element's language value\r\n\t\t// being equal to the identifier C,\r\n\t\t// or beginning with the identifier C immediately followed by \"-\".\r\n\t\t// The matching of C against the element's language value is performed case-insensitively.\r\n\t\t// The identifier C does not have to be a valid language name.\"\r\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\r\n\t\t\"lang\": markFunction( function( lang ) {\r\n\t\t\t// lang value must be a valid identifier\r\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\r\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\r\n\t\t\t}\r\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar elemLang;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\r\n\t\t\t\t\t\telem.lang :\r\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\r\n\r\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\r\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// Miscellaneous\r\n\t\t\"target\": function( elem ) {\r\n\t\t\tvar hash = window.location && window.location.hash;\r\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\r\n\t\t},\r\n\r\n\t\t\"root\": function( elem ) {\r\n\t\t\treturn elem === docElem;\r\n\t\t},\r\n\r\n\t\t\"focus\": function( elem ) {\r\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n\t\t},\r\n\r\n\t\t// Boolean properties\r\n\t\t\"enabled\": createDisabledPseudo( false ),\r\n\t\t\"disabled\": createDisabledPseudo( true ),\r\n\r\n\t\t\"checked\": function( elem ) {\r\n\t\t\t// In CSS3, :checked should return both checked and selected elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\r\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n\t\t},\r\n\r\n\t\t\"selected\": function( elem ) {\r\n\t\t\t// Accessing this property makes selected-by-default\r\n\t\t\t// options in Safari work properly\r\n\t\t\tif ( elem.parentNode ) {\r\n\t\t\t\telem.parentNode.selectedIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.selected === true;\r\n\t\t},\r\n\r\n\t\t// Contents\r\n\t\t\"empty\": function( elem ) {\r\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\r\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\r\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\r\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tif ( elem.nodeType < 6 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t\"parent\": function( elem ) {\r\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\r\n\t\t},\r\n\r\n\t\t// Element/input types\r\n\t\t\"header\": function( elem ) {\r\n\t\t\treturn rheader.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"input\": function( elem ) {\r\n\t\t\treturn rinputs.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"button\": function( elem ) {\r\n\t\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n\t\t},\r\n\r\n\t\t\"text\": function( elem ) {\r\n\t\t\tvar attr;\r\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\r\n\t\t\t\telem.type === \"text\" &&\r\n\r\n\t\t\t\t// Support: IE<8\r\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\r\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\r\n\t\t},\r\n\r\n\t\t// Position-in-collection\r\n\t\t\"first\": createPositionalPseudo(function() {\r\n\t\t\treturn [ 0 ];\r\n\t\t}),\r\n\r\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\treturn [ length - 1 ];\r\n\t\t}),\r\n\r\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\r\n\t\t}),\r\n\r\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 1;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; --i >= 0; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; ++i < length; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t})\r\n\t}\r\n};\r\n\r\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Add button/input type pseudos\r\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n\tExpr.pseudos[ i ] = createInputPseudo( i );\r\n}\r\nfor ( i in { submit: true, reset: true } ) {\r\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\r\n}\r\n\r\n// Easy API for creating new setFilters\r\nfunction setFilters() {}\r\nsetFilters.prototype = Expr.filters = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\r\n\tvar matched, match, tokens, type,\r\n\t\tsoFar, groups, preFilters,\r\n\t\tcached = tokenCache[ selector + \" \" ];\r\n\r\n\tif ( cached ) {\r\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\r\n\t}\r\n\r\n\tsoFar = selector;\r\n\tgroups = [];\r\n\tpreFilters = Expr.preFilter;\r\n\r\n\twhile ( soFar ) {\r\n\r\n\t\t// Comma and first run\r\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Don't consume trailing commas as valid\r\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\r\n\t\t\t}\r\n\t\t\tgroups.push( (tokens = []) );\r\n\t\t}\r\n\r\n\t\tmatched = false;\r\n\r\n\t\t// Combinators\r\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\r\n\t\t\tmatched = match.shift();\r\n\t\t\ttokens.push({\r\n\t\t\t\tvalue: matched,\r\n\t\t\t\t// Cast descendant combinators to space\r\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\r\n\t\t\t});\r\n\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t}\r\n\r\n\t\t// Filters\r\n\t\tfor ( type in Expr.filter ) {\r\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\r\n\t\t\t\tmatched = match.shift();\r\n\t\t\t\ttokens.push({\r\n\t\t\t\t\tvalue: matched,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmatches: match\r\n\t\t\t\t});\r\n\t\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !matched ) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the length of the invalid excess\r\n\t// if we're just parsing\r\n\t// Otherwise, throw an error or return tokens\r\n\treturn parseOnly ?\r\n\t\tsoFar.length :\r\n\t\tsoFar ?\r\n\t\t\tSizzle.error( selector ) :\r\n\t\t\t// Cache the tokens\r\n\t\t\ttokenCache( selector, groups ).slice( 0 );\r\n};\r\n\r\nfunction toSelector( tokens ) {\r\n\tvar i = 0,\r\n\t\tlen = tokens.length,\r\n\t\tselector = \"\";\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tselector += tokens[i].value;\r\n\t}\r\n\treturn selector;\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n\tvar dir = combinator.dir,\r\n\t\tskip = combinator.next,\r\n\t\tkey = skip || dir,\r\n\t\tcheckNonElements = base && key === \"parentNode\",\r\n\t\tdoneName = done++;\r\n\r\n\treturn combinator.first ?\r\n\t\t// Check against closest ancestor/preceding element\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\treturn matcher( elem, context, xml );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} :\r\n\r\n\t\t// Check against all ancestor/preceding elements\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar oldCache, uniqueCache, outerCache,\r\n\t\t\t\tnewCache = [ dirruns, doneName ];\r\n\r\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\r\n\t\t\tif ( xml ) {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\r\n\r\n\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\r\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\r\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\r\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\r\n\r\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\r\n\r\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\r\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n\treturn matchers.length > 1 ?\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar i = matchers.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} :\r\n\t\tmatchers[0];\r\n}\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n\tvar i = 0,\r\n\t\tlen = contexts.length;\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tSizzle( selector, contexts[i], results );\r\n\t}\r\n\treturn results;\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n\tvar elem,\r\n\t\tnewUnmatched = [],\r\n\t\ti = 0,\r\n\t\tlen = unmatched.length,\r\n\t\tmapped = map != null;\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\r\n\t\t\t\tnewUnmatched.push( elem );\r\n\t\t\t\tif ( mapped ) {\r\n\t\t\t\t\tmap.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n\tif ( postFilter && !postFilter[ expando ] ) {\r\n\t\tpostFilter = setMatcher( postFilter );\r\n\t}\r\n\tif ( postFinder && !postFinder[ expando ] ) {\r\n\t\tpostFinder = setMatcher( postFinder, postSelector );\r\n\t}\r\n\treturn markFunction(function( seed, results, context, xml ) {\r\n\t\tvar temp, i, elem,\r\n\t\t\tpreMap = [],\r\n\t\t\tpostMap = [],\r\n\t\t\tpreexisting = results.length,\r\n\r\n\t\t\t// Get initial elements from seed or context\r\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\r\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\r\n\t\t\t\telems,\r\n\r\n\t\t\tmatcherOut = matcher ?\r\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n\t\t\t\t\t// ...intermediate processing is necessary\r\n\t\t\t\t\t[] :\r\n\r\n\t\t\t\t\t// ...otherwise use results directly\r\n\t\t\t\t\tresults :\r\n\t\t\t\tmatcherIn;\r\n\r\n\t\t// Find primary matches\r\n\t\tif ( matcher ) {\r\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\r\n\t\t}\r\n\r\n\t\t// Apply postFilter\r\n\t\tif ( postFilter ) {\r\n\t\t\ttemp = condense( matcherOut, postMap );\r\n\t\t\tpostFilter( temp, [], context, xml );\r\n\r\n\t\t\t// Un-match failing elements by moving them back to matcherIn\r\n\t\t\ti = temp.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( (elem = temp[i]) ) {\r\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( seed ) {\r\n\t\t\tif ( postFinder || preFilter ) {\r\n\t\t\t\tif ( postFinder ) {\r\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n\t\t\t\t\ttemp = [];\r\n\t\t\t\t\ti = matcherOut.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\r\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\r\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\r\n\t\t\t\ti = matcherOut.length;\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\r\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Add elements to results, through postFinder if defined\r\n\t\t} else {\r\n\t\t\tmatcherOut = condense(\r\n\t\t\t\tmatcherOut === results ?\r\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\r\n\t\t\t\t\tmatcherOut\r\n\t\t\t);\r\n\t\t\tif ( postFinder ) {\r\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\r\n\t\t\t} else {\r\n\t\t\t\tpush.apply( results, matcherOut );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n\tvar checkContext, matcher, j,\r\n\t\tlen = tokens.length,\r\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\r\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\r\n\t\ti = leadingRelative ? 1 : 0,\r\n\r\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\r\n\t\tmatchContext = addCombinator( function( elem ) {\r\n\t\t\treturn elem === checkContext;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchAnyContext = addCombinator( function( elem ) {\r\n\t\t\treturn indexOf( checkContext, elem ) > -1;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchers = [ function( elem, context, xml ) {\r\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n\t\t\t\t(checkContext = context).nodeType ?\r\n\t\t\t\t\tmatchContext( elem, context, xml ) :\r\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\r\n\t\t\t// Avoid hanging onto element (issue #299)\r\n\t\t\tcheckContext = null;\r\n\t\t\treturn ret;\r\n\t\t} ];\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\r\n\t\t} else {\r\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n\t\t\t// Return special upon seeing a positional matcher\r\n\t\t\tif ( matcher[ expando ] ) {\r\n\t\t\t\t// Find the next relative operator (if any) for proper handling\r\n\t\t\t\tj = ++i;\r\n\t\t\t\tfor ( ; j < len; j++ ) {\r\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn setMatcher(\r\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\r\n\t\t\t\t\ti > 1 && toSelector(\r\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\r\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\r\n\t\t\t\t\tmatcher,\r\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n\t\t\t\t\tj < len && toSelector( tokens )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmatchers.push( matcher );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n\tvar bySet = setMatchers.length > 0,\r\n\t\tbyElement = elementMatchers.length > 0,\r\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\r\n\t\t\tvar elem, j, matcher,\r\n\t\t\t\tmatchedCount = 0,\r\n\t\t\t\ti = \"0\",\r\n\t\t\t\tunmatched = seed && [],\r\n\t\t\t\tsetMatched = [],\r\n\t\t\t\tcontextBackup = outermostContext,\r\n\t\t\t\t// We must always have either seed elements or outermost context\r\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\r\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\r\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\r\n\t\t\t\tlen = elems.length;\r\n\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\toutermostContext = context === document || context || outermost;\r\n\t\t\t}\r\n\r\n\t\t\t// Add elements passing elementMatchers directly to results\r\n\t\t\t// Support: IE<9, Safari\r\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\r\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\r\n\t\t\t\tif ( byElement && elem ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\r\n\t\t\t\t\t\tsetDocument( elem );\r\n\t\t\t\t\t\txml = !documentIsHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( outermost ) {\r\n\t\t\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track unmatched elements for set filters\r\n\t\t\t\tif ( bySet ) {\r\n\t\t\t\t\t// They will have gone through all possible matchers\r\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\r\n\t\t\t\t\t\tmatchedCount--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lengthen the array for every element, matched or not\r\n\t\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t\tunmatched.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\r\n\t\t\t// makes the latter nonnegative.\r\n\t\t\tmatchedCount += i;\r\n\r\n\t\t\t// Apply set filters to unmatched elements\r\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\r\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\r\n\t\t\t// no element matchers and no seed.\r\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\r\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\r\n\t\t\t// numerically zero.\r\n\t\t\tif ( bySet && i !== matchedCount ) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\r\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\r\n\t\t\t\t\tif ( matchedCount > 0 ) {\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\r\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\r\n\t\t\t\t\tsetMatched = condense( setMatched );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add matches to results\r\n\t\t\t\tpush.apply( results, setMatched );\r\n\r\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\r\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n\t\t\t\t\tSizzle.uniqueSort( results );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Override manipulation of globals by nested matchers\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\toutermostContext = contextBackup;\r\n\t\t\t}\r\n\r\n\t\t\treturn unmatched;\r\n\t\t};\r\n\r\n\treturn bySet ?\r\n\t\tmarkFunction( superMatcher ) :\r\n\t\tsuperMatcher;\r\n}\r\n\r\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\r\n\tvar i,\r\n\t\tsetMatchers = [],\r\n\t\telementMatchers = [],\r\n\t\tcached = compilerCache[ selector + \" \" ];\r\n\r\n\tif ( !cached ) {\r\n\t\t// Generate a function of recursive functions that can be used to check each element\r\n\t\tif ( !match ) {\r\n\t\t\tmatch = tokenize( selector );\r\n\t\t}\r\n\t\ti = match.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tcached = matcherFromTokens( match[i] );\r\n\t\t\tif ( cached[ expando ] ) {\r\n\t\t\t\tsetMatchers.push( cached );\r\n\t\t\t} else {\r\n\t\t\t\telementMatchers.push( cached );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache the compiled function\r\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n\r\n\t\t// Save selector and tokenization\r\n\t\tcached.selector = selector;\r\n\t}\r\n\treturn cached;\r\n};\r\n\r\n/**\r\n * A low-level selection function that works with Sizzle's compiled\r\n *  selector functions\r\n * @param {String|Function} selector A selector or a pre-compiled\r\n *  selector function built with Sizzle.compile\r\n * @param {Element} context\r\n * @param {Array} [results]\r\n * @param {Array} [seed] A set of elements to match against\r\n */\r\nselect = Sizzle.select = function( selector, context, results, seed ) {\r\n\tvar i, tokens, token, type, find,\r\n\t\tcompiled = typeof selector === \"function\" && selector,\r\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\r\n\r\n\tresults = results || [];\r\n\r\n\t// Try to minimize operations if there is only one selector in the list and no seed\r\n\t// (the latter of which guarantees us context)\r\n\tif ( match.length === 1 ) {\r\n\r\n\t\t// Reduce context if the leading compound selector is an ID\r\n\t\ttokens = match[0] = match[0].slice( 0 );\r\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\r\n\r\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\r\n\t\t\tif ( !context ) {\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\r\n\t\t\t} else if ( compiled ) {\r\n\t\t\t\tcontext = context.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tselector = selector.slice( tokens.shift().value.length );\r\n\t\t}\r\n\r\n\t\t// Fetch a seed set for right-to-left matching\r\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\ttoken = tokens[i];\r\n\r\n\t\t\t// Abort if we hit a combinator\r\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( (find = Expr.find[ type ]) ) {\r\n\t\t\t\t// Search, expanding context for leading sibling combinators\r\n\t\t\t\tif ( (seed = find(\r\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\r\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\r\n\t\t\t\t)) ) {\r\n\r\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\r\n\t\t\t\t\ttokens.splice( i, 1 );\r\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\r\n\t\t\t\t\tif ( !selector ) {\r\n\t\t\t\t\t\tpush.apply( results, seed );\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Compile and execute a filtering function if one is not provided\r\n\t// Provide `match` to avoid retokenization if we modified the selector above\r\n\t( compiled || compile( selector, match ) )(\r\n\t\tseed,\r\n\t\tcontext,\r\n\t\t!documentIsHTML,\r\n\t\tresults,\r\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\r\n\t);\r\n\treturn results;\r\n};\r\n\r\n// One-time assignments\r\n\r\n// Sort stability\r\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\r\n\r\n// Support: Chrome 14-35+\r\n// Always assume duplicates if they aren't passed to the comparison function\r\nsupport.detectDuplicates = !!hasDuplicate;\r\n\r\n// Initialize against the default document\r\nsetDocument();\r\n\r\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\r\n// Detached nodes confoundingly follow *each other*\r\nsupport.sortDetached = assert(function( el ) {\r\n\t// Should return 1, but returns 4 (following)\r\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\r\n});\r\n\r\n// Support: IE<8\r\n// Prevent attribute/property \"interpolation\"\r\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\nif ( !assert(function( el ) {\r\n\tel.innerHTML = \"<a href='#'></a>\";\r\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\r\n}) ) {\r\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use defaultValue in place of getAttribute(\"value\")\r\nif ( !support.attributes || !assert(function( el ) {\r\n\tel.innerHTML = \"<input/>\";\r\n\tel.firstChild.setAttribute( \"value\", \"\" );\r\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\r\n}) ) {\r\n\taddHandle( \"value\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\r\n\t\t\treturn elem.defaultValue;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use getAttributeNode to fetch booleans when getAttribute lies\r\nif ( !assert(function( el ) {\r\n\treturn el.getAttribute(\"disabled\") == null;\r\n}) ) {\r\n\taddHandle( booleans, function( elem, name, isXML ) {\r\n\t\tvar val;\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\r\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\r\n\t\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nreturn Sizzle;\r\n\r\n})( window );\r\n\r\n\r\n\r\njQuery.find = Sizzle;\r\njQuery.expr = Sizzle.selectors;\r\n\r\n// Deprecated\r\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\r\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\r\njQuery.text = Sizzle.getText;\r\njQuery.isXMLDoc = Sizzle.isXML;\r\njQuery.contains = Sizzle.contains;\r\njQuery.escapeSelector = Sizzle.escape;\r\n\r\n\r\n\r\n\r\nvar dir = function( elem, dir, until ) {\r\n\tvar matched = [],\r\n\t\ttruncate = until !== undefined;\r\n\r\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\r\n\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmatched.push( elem );\r\n\t\t}\r\n\t}\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar siblings = function( n, elem ) {\r\n\tvar matched = [];\r\n\r\n\tfor ( ; n; n = n.nextSibling ) {\r\n\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n\t\t\tmatched.push( n );\r\n\t\t}\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar rneedsContext = jQuery.expr.match.needsContext;\r\n\r\n\r\n\r\nfunction nodeName( elem, name ) {\r\n\r\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\r\n};\r\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\r\n\r\n\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, not ) {\r\n\tif ( isFunction( qualifier ) ) {\r\n\t\treturn jQuery.grep( elements, function( elem, i ) {\r\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\r\n\t\t} );\r\n\t}\r\n\r\n\t// Single element\r\n\tif ( qualifier.nodeType ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( elem === qualifier ) !== not;\r\n\t\t} );\r\n\t}\r\n\r\n\t// Arraylike of elements (jQuery, arguments, Array)\r\n\tif ( typeof qualifier !== \"string\" ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\r\n\t\t} );\r\n\t}\r\n\r\n\t// Filtered directly for both simple and complex selectors\r\n\treturn jQuery.filter( qualifier, elements, not );\r\n}\r\n\r\njQuery.filter = function( expr, elems, not ) {\r\n\tvar elem = elems[ 0 ];\r\n\r\n\tif ( not ) {\r\n\t\texpr = \":not(\" + expr + \")\";\r\n\t}\r\n\r\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\r\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\r\n\t}\r\n\r\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n\t\treturn elem.nodeType === 1;\r\n\t} ) );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfind: function( selector ) {\r\n\t\tvar i, ret,\r\n\t\t\tlen = this.length,\r\n\t\t\tself = this;\r\n\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t}\r\n\r\n\t\tret = this.pushStack( [] );\r\n\r\n\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\tjQuery.find( selector, self[ i ], ret );\r\n\t\t}\r\n\r\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\r\n\t},\r\n\tfilter: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\r\n\t},\r\n\tnot: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\r\n\t},\r\n\tis: function( selector ) {\r\n\t\treturn !!winnow(\r\n\t\t\tthis,\r\n\r\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\r\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n\t\t\t\tjQuery( selector ) :\r\n\t\t\t\tselector || [],\r\n\t\t\tfalse\r\n\t\t).length;\r\n\t}\r\n} );\r\n\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n\t// Strict HTML recognition (#11290: must start with <)\r\n\t// Shortcut simple #id case for speed\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context, root ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Method init() accepts an alternate rootjQuery\r\n\t\t// so migrate can support jQuery.sub (gh-2101)\r\n\t\troot = root || rootjQuery;\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[ 0 ] === \"<\" &&\r\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\r\n\t\t\t\tselector.length >= 3 ) {\r\n\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[ 1 ] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\r\n\r\n\t\t\t\t\t// Option to run scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[ 1 ],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\r\n\r\n\t\t\t\t\tif ( elem ) {\r\n\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis[ 0 ] = elem;\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || root ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis[ 0 ] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( isFunction( selector ) ) {\r\n\t\t\treturn root.ready !== undefined ?\r\n\t\t\t\troot.ready( selector ) :\r\n\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\n\r\n\r\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n\r\n\t// Methods guaranteed to produce a unique set when starting from a unique set\r\n\tguaranteedUnique = {\r\n\t\tchildren: true,\r\n\t\tcontents: true,\r\n\t\tnext: true,\r\n\t\tprev: true\r\n\t};\r\n\r\njQuery.fn.extend( {\r\n\thas: function( target ) {\r\n\t\tvar targets = jQuery( target, this ),\r\n\t\t\tl = targets.length;\r\n\r\n\t\treturn this.filter( function() {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tclosest: function( selectors, context ) {\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\tl = this.length,\r\n\t\t\tmatched = [],\r\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\r\n\r\n\t\t// Positional selectors never match, since there's no _selection_ context\r\n\t\tif ( !rneedsContext.test( selectors ) ) {\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\r\n\r\n\t\t\t\t\t// Always skip document fragments\r\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\r\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\r\n\r\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\r\n\t\t\t\t\t\tcur.nodeType === 1 &&\r\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\r\n\r\n\t\t\t\t\t\tmatched.push( cur );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\r\n\t},\r\n\r\n\t// Determine the position of an element within the set\r\n\tindex: function( elem ) {\r\n\r\n\t\t// No argument, return index in parent\r\n\t\tif ( !elem ) {\r\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\r\n\t\t}\r\n\r\n\t\t// Index in selector\r\n\t\tif ( typeof elem === \"string\" ) {\r\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\r\n\t\t}\r\n\r\n\t\t// Locate the position of the desired element\r\n\t\treturn indexOf.call( this,\r\n\r\n\t\t\t// If it receives a jQuery object, the first element is used\r\n\t\t\telem.jquery ? elem[ 0 ] : elem\r\n\t\t);\r\n\t},\r\n\r\n\tadd: function( selector, context ) {\r\n\t\treturn this.pushStack(\r\n\t\t\tjQuery.uniqueSort(\r\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\taddBack: function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t}\r\n} );\r\n\r\nfunction sibling( cur, dir ) {\r\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\r\n\treturn cur;\r\n}\r\n\r\njQuery.each( {\r\n\tparent: function( elem ) {\r\n\t\tvar parent = elem.parentNode;\r\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n\t},\r\n\tparents: function( elem ) {\r\n\t\treturn dir( elem, \"parentNode\" );\r\n\t},\r\n\tparentsUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"parentNode\", until );\r\n\t},\r\n\tnext: function( elem ) {\r\n\t\treturn sibling( elem, \"nextSibling\" );\r\n\t},\r\n\tprev: function( elem ) {\r\n\t\treturn sibling( elem, \"previousSibling\" );\r\n\t},\r\n\tnextAll: function( elem ) {\r\n\t\treturn dir( elem, \"nextSibling\" );\r\n\t},\r\n\tprevAll: function( elem ) {\r\n\t\treturn dir( elem, \"previousSibling\" );\r\n\t},\r\n\tnextUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"nextSibling\", until );\r\n\t},\r\n\tprevUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"previousSibling\", until );\r\n\t},\r\n\tsiblings: function( elem ) {\r\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\r\n\t},\r\n\tchildren: function( elem ) {\r\n\t\treturn siblings( elem.firstChild );\r\n\t},\r\n\tcontents: function( elem ) {\r\n        if ( nodeName( elem, \"iframe\" ) ) {\r\n            return elem.contentDocument;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\r\n        // Treat the template element as a regular one in browsers that\r\n        // don't support it.\r\n        if ( nodeName( elem, \"template\" ) ) {\r\n            elem = elem.content || elem;\r\n        }\r\n\r\n        return jQuery.merge( [], elem.childNodes );\r\n\t}\r\n}, function( name, fn ) {\r\n\tjQuery.fn[ name ] = function( until, selector ) {\r\n\t\tvar matched = jQuery.map( this, fn, until );\r\n\r\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\r\n\t\t\tselector = until;\r\n\t\t}\r\n\r\n\t\tif ( selector && typeof selector === \"string\" ) {\r\n\t\t\tmatched = jQuery.filter( selector, matched );\r\n\t\t}\r\n\r\n\t\tif ( this.length > 1 ) {\r\n\r\n\t\t\t// Remove duplicates\r\n\t\t\tif ( !guaranteedUnique[ name ] ) {\r\n\t\t\t\tjQuery.uniqueSort( matched );\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse order for parents* and prev-derivatives\r\n\t\t\tif ( rparentsprev.test( name ) ) {\r\n\t\t\t\tmatched.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched );\r\n\t};\r\n} );\r\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\r\n\r\n\r\n\r\n// Convert String-formatted options into Object-formatted ones\r\nfunction createOptions( options ) {\r\n\tvar object = {};\r\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t} );\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\tcreateOptions( options ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Flag to know if list is currently firing\r\n\t\tfiring,\r\n\r\n\t\t// Last fire value for non-forgettable lists\r\n\t\tmemory,\r\n\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\r\n\t\t// Flag to prevent firing\r\n\t\tlocked,\r\n\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\r\n\t\t// Queue of execution data for repeatable lists\r\n\t\tqueue = [],\r\n\r\n\t\t// Index of currently firing callback (modified by add/remove as needed)\r\n\t\tfiringIndex = -1,\r\n\r\n\t\t// Fire callbacks\r\n\t\tfire = function() {\r\n\r\n\t\t\t// Enforce single-firing\r\n\t\t\tlocked = locked || options.once;\r\n\r\n\t\t\t// Execute callbacks for all pending executions,\r\n\t\t\t// respecting firingIndex overrides and runtime changes\r\n\t\t\tfired = firing = true;\r\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\r\n\t\t\t\tmemory = queue.shift();\r\n\t\t\t\twhile ( ++firingIndex < list.length ) {\r\n\r\n\t\t\t\t\t// Run callback and check for early termination\r\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\r\n\t\t\t\t\t\toptions.stopOnFalse ) {\r\n\r\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\r\n\t\t\t\t\t\tfiringIndex = list.length;\r\n\t\t\t\t\t\tmemory = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Forget the data if we're done with it\r\n\t\t\tif ( !options.memory ) {\r\n\t\t\t\tmemory = false;\r\n\t\t\t}\r\n\r\n\t\t\tfiring = false;\r\n\r\n\t\t\t// Clean up if we're done firing for good\r\n\t\t\tif ( locked ) {\r\n\r\n\t\t\t\t// Keep an empty list if we have data for future add calls\r\n\t\t\t\tif ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\r\n\t\t\t\t// Otherwise, this object is spent\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\r\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfiringIndex = list.length - 1;\r\n\t\t\t\t\t\tqueue.push( memory );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t( function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} )( arguments );\r\n\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\tlist.splice( index, 1 );\r\n\r\n\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ?\r\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\r\n\t\t\t\t\tlist.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire and .add\r\n\t\t\t// Abort any current/pending executions\r\n\t\t\t// Clear all callbacks and values\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tlist = memory = \"\";\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire\r\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\r\n\t\t\t// Abort any pending executions\r\n\t\t\tlock: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tif ( !memory && !firing ) {\r\n\t\t\t\t\tlist = memory = \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !!locked;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( !locked ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tqueue.push( args );\r\n\t\t\t\t\tif ( !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\nfunction Identity( v ) {\r\n\treturn v;\r\n}\r\nfunction Thrower( ex ) {\r\n\tthrow ex;\r\n}\r\n\r\nfunction adoptValue( value, resolve, reject, noValue ) {\r\n\tvar method;\r\n\r\n\ttry {\r\n\r\n\t\t// Check for promise aspect first to privilege synchronous behavior\r\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\r\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\r\n\r\n\t\t// Other thenables\r\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\r\n\t\t\tmethod.call( value, resolve, reject );\r\n\r\n\t\t// Other non-thenables\r\n\t\t} else {\r\n\r\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\r\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\r\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\r\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\r\n\t\t}\r\n\r\n\t// For Promises/A+, convert exceptions into rejections\r\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\r\n\t// Deferred#then to conditionally suppress rejection.\r\n\t} catch ( value ) {\r\n\r\n\t\t// Support: Android 4.0 only\r\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\r\n\t\treject.apply( undefined, [ value ] );\r\n\t}\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\r\n\t\t\t\t// action, add listener, callbacks,\r\n\t\t\t\t// ... .then handlers, argument index, [final state]\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\r\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\r\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\r\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\t\"catch\": function( fn ) {\r\n\t\t\t\t\treturn promise.then( null, fn );\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Keep pipe for back-compat\r\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\r\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\r\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\r\n\r\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\r\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\r\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\r\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\r\n\t\t\t\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\r\n\t\t\t\t\tvar maxDepth = 0;\r\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\r\n\t\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\t\tvar that = this,\r\n\t\t\t\t\t\t\t\targs = arguments,\r\n\t\t\t\t\t\t\t\tmightThrow = function() {\r\n\t\t\t\t\t\t\t\t\tvar returned, then;\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\r\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\r\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\r\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\r\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\r\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\r\n\t\t\t\t\t\t\t\t\tthen = returned &&\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\r\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\r\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\r\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\r\n\t\t\t\t\t\t\t\t\t\treturned.then;\r\n\r\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\r\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\r\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\r\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\r\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\r\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\r\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\r\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\r\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\r\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\r\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\r\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\r\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\r\n\t\t\t\t\t\t\t\tprocess = special ?\r\n\t\t\t\t\t\t\t\t\tmightThrow :\r\n\t\t\t\t\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\r\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\r\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\r\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\r\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\r\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\r\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\r\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\r\n\t\t\t\t\t\t\t// subsequent errors\r\n\t\t\t\t\t\t\tif ( depth ) {\r\n\t\t\t\t\t\t\t\tprocess();\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\r\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\r\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\r\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\r\n\t\t\t\t\t\t// progress_handlers.add( ... )\r\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tnewDefer,\r\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\r\n\t\t\t\t\t\t\t\t\tonProgress :\r\n\t\t\t\t\t\t\t\t\tIdentity,\r\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\r\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tnewDefer,\r\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\r\n\t\t\t\t\t\t\t\t\tonFulfilled :\r\n\t\t\t\t\t\t\t\t\tIdentity\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// rejected_handlers.add( ... )\r\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tnewDefer,\r\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\r\n\t\t\t\t\t\t\t\t\tonRejected :\r\n\t\t\t\t\t\t\t\t\tThrower\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 5 ];\r\n\r\n\t\t\t// promise.progress = list.add\r\n\t\t\t// promise.done = list.add\r\n\t\t\t// promise.fail = list.add\r\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add(\r\n\t\t\t\t\tfunction() {\r\n\r\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\r\n\t\t\t\t\t\t// state = \"rejected\"\r\n\t\t\t\t\t\tstate = stateString;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// rejected_callbacks.disable\r\n\t\t\t\t\t// fulfilled_callbacks.disable\r\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\r\n\r\n\t\t\t\t\t// rejected_handlers.disable\r\n\t\t\t\t\t// fulfilled_handlers.disable\r\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\r\n\r\n\t\t\t\t\t// progress_callbacks.lock\r\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\r\n\r\n\t\t\t\t\t// progress_handlers.lock\r\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// progress_handlers.fire\r\n\t\t\t// fulfilled_handlers.fire\r\n\t\t\t// rejected_handlers.fire\r\n\t\t\tlist.add( tuple[ 3 ].fire );\r\n\r\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\r\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\r\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\r\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\r\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t// deferred.notifyWith = list.fireWith\r\n\t\t\t// deferred.resolveWith = list.fireWith\r\n\t\t\t// deferred.rejectWith = list.fireWith\r\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\r\n\t\t} );\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( singleValue ) {\r\n\t\tvar\r\n\r\n\t\t\t// count of uncompleted subordinates\r\n\t\t\tremaining = arguments.length,\r\n\r\n\t\t\t// count of unprocessed arguments\r\n\t\t\ti = remaining,\r\n\r\n\t\t\t// subordinate fulfillment data\r\n\t\t\tresolveContexts = Array( i ),\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\r\n\t\t\t// the master Deferred\r\n\t\t\tmaster = jQuery.Deferred(),\r\n\r\n\t\t\t// subordinate callback factory\r\n\t\t\tupdateFunc = function( i ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tresolveContexts[ i ] = this;\r\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( !( --remaining ) ) {\r\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t// Single- and empty arguments are adopted like Promise.resolve\r\n\t\tif ( remaining <= 1 ) {\r\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\r\n\t\t\t\t!remaining );\r\n\r\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\r\n\t\t\tif ( master.state() === \"pending\" ||\r\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\r\n\r\n\t\t\t\treturn master.then();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Multiple arguments are aggregated like Promise.all array elements\r\n\t\twhile ( i-- ) {\r\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\r\n\t\t}\r\n\r\n\t\treturn master.promise();\r\n\t}\r\n} );\r\n\r\n\r\n// These usually indicate a programmer mistake during development,\r\n// warn about them ASAP rather than swallowing them by default.\r\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\r\n\r\njQuery.Deferred.exceptionHook = function( error, stack ) {\r\n\r\n\t// Support: IE 8 - 9 only\r\n\t// Console exists when dev tools are open, which can happen at any time\r\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\r\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\njQuery.readyException = function( error ) {\r\n\twindow.setTimeout( function() {\r\n\t\tthrow error;\r\n\t} );\r\n};\r\n\r\n\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList = jQuery.Deferred();\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\treadyList\r\n\t\t.then( fn )\r\n\r\n\t\t// Wrap jQuery.readyException in a function so that the lookup\r\n\t\t// happens at the time of error handling instead of callback\r\n\t\t// registration.\r\n\t\t.catch( function( error ) {\r\n\t\t\tjQuery.readyException( error );\r\n\t\t} );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\t}\r\n} );\r\n\r\njQuery.ready.then = readyList.then;\r\n\r\n// The ready event handler and self cleanup method\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\n// Catch cases where $(document).ready() is called\r\n// after the browser event has already occurred.\r\n// Support: IE <=9 - 10 only\r\n// Older IE sometimes signals \"interactive\" too soon\r\nif ( document.readyState === \"complete\" ||\r\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\twindow.setTimeout( jQuery.ready );\r\n\r\n} else {\r\n\r\n\t// Use the handy event callback\r\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t// A fallback to window.onload, that will always work\r\n\twindow.addEventListener( \"load\", completed );\r\n}\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( toType( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\tvalue :\r\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif ( chainable ) {\r\n\t\treturn elems;\r\n\t}\r\n\r\n\t// Gets\r\n\tif ( bulk ) {\r\n\t\treturn fn.call( elems );\r\n\t}\r\n\r\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\n\r\n\r\n// Matches dashed string for camelizing\r\nvar rmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([a-z])/g;\r\n\r\n// Used by camelCase as callback to replace()\r\nfunction fcamelCase( all, letter ) {\r\n\treturn letter.toUpperCase();\r\n}\r\n\r\n// Convert dashed to camelCase; used by the css and data modules\r\n// Support: IE <=9 - 11, Edge 12 - 15\r\n// Microsoft forgot to hump their vendor prefix (#9572)\r\nfunction camelCase( string ) {\r\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n}\r\nvar acceptData = function( owner ) {\r\n\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\n\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tcache: function( owner ) {\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see #8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\t// Always use camelCase key (gh-2257)\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ camelCase( data ) ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\r\n\t\t\t// Always use camelCase key (gh-2257)\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\treturn this.get( owner, key );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key !== undefined ) {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( Array.isArray( key ) ) {\r\n\r\n\t\t\t\t// If key is an array of keys...\r\n\t\t\t\t// We always set camelCase keys, so remove that.\r\n\t\t\t\tkey = key.map( camelCase );\r\n\t\t\t} else {\r\n\t\t\t\tkey = camelCase( key );\r\n\r\n\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\tkey = key in cache ?\r\n\t\t\t\t\t[ key ] :\r\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\r\n\t\t\t}\r\n\r\n\t\t\ti = key.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ key[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <=35 - 45\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\nvar dataPriv = new Data();\r\n\r\nvar dataUser = new Data();\r\n\r\n\r\n\r\n//\tImplementation Summary\r\n//\r\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n//\t2. Improve the module's maintainability by reducing the storage\r\n//\t\tpaths to a single mechanism.\r\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /[A-Z]/g;\r\n\r\nfunction getData( data ) {\r\n\tif ( data === \"true\" ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( data === \"false\" ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( data === \"null\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Only convert to a number if it doesn't change the string\r\n\tif ( data === +data + \"\" ) {\r\n\t\treturn +data;\r\n\t}\r\n\r\n\tif ( rbrace.test( data ) ) {\r\n\t\treturn JSON.parse( data );\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = getData( data );\r\n\t\t\t} catch ( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdataUser.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend( {\r\n\thasData: function( elem ) {\r\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn dataUser.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdataUser.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to dataPriv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn dataPriv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdataPriv.remove( elem, name );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = dataUser.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE 11 only\r\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tdataUser.set( this, key );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data;\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// The key will always be camelCased in Data\r\n\t\t\t\tdata = dataUser.get( elem, key );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, key );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tthis.each( function() {\r\n\r\n\t\t\t\t// We always store the camelCased key\r\n\t\t\t\tdataUser.set( this, key, value );\r\n\t\t\t} );\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdataUser.remove( this, key );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\njQuery.extend( {\r\n\tqueue: function( elem, type, data ) {\r\n\t\tvar queue;\r\n\r\n\t\tif ( elem ) {\r\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\r\n\t\t\tqueue = dataPriv.get( elem, type );\r\n\r\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n\t\t\tif ( data ) {\r\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\r\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueue.push( data );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn queue || [];\r\n\t\t}\r\n\t},\r\n\r\n\tdequeue: function( elem, type ) {\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\tvar queue = jQuery.queue( elem, type ),\r\n\t\t\tstartLength = queue.length,\r\n\t\t\tfn = queue.shift(),\r\n\t\t\thooks = jQuery._queueHooks( elem, type ),\r\n\t\t\tnext = function() {\r\n\t\t\t\tjQuery.dequeue( elem, type );\r\n\t\t\t};\r\n\r\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n\t\tif ( fn === \"inprogress\" ) {\r\n\t\t\tfn = queue.shift();\r\n\t\t\tstartLength--;\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\r\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n\t\t\t// automatically dequeued\r\n\t\t\tif ( type === \"fx\" ) {\r\n\t\t\t\tqueue.unshift( \"inprogress\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Clear up the last queue stop function\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tfn.call( elem, next, hooks );\r\n\t\t}\r\n\r\n\t\tif ( !startLength && hooks ) {\r\n\t\t\thooks.empty.fire();\r\n\t\t}\r\n\t},\r\n\r\n\t// Not public - generate a queueHooks object, or return the current one\r\n\t_queueHooks: function( elem, type ) {\r\n\t\tvar key = type + \"queueHooks\";\r\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\r\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\r\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\r\n\t\t\t} )\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tqueue: function( type, data ) {\r\n\t\tvar setter = 2;\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tdata = type;\r\n\t\t\ttype = \"fx\";\r\n\t\t\tsetter--;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length < setter ) {\r\n\t\t\treturn jQuery.queue( this[ 0 ], type );\r\n\t\t}\r\n\r\n\t\treturn data === undefined ?\r\n\t\t\tthis :\r\n\t\t\tthis.each( function() {\r\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\r\n\r\n\t\t\t\t// Ensure a hooks for this queue\r\n\t\t\t\tjQuery._queueHooks( this, type );\r\n\r\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\r\n\t\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\tdequeue: function( type ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.dequeue( this, type );\r\n\t\t} );\r\n\t},\r\n\tclearQueue: function( type ) {\r\n\t\treturn this.queue( type || \"fx\", [] );\r\n\t},\r\n\r\n\t// Get a promise resolved when queues of a certain type\r\n\t// are emptied (fx is the type by default)\r\n\tpromise: function( type, obj ) {\r\n\t\tvar tmp,\r\n\t\t\tcount = 1,\r\n\t\t\tdefer = jQuery.Deferred(),\r\n\t\t\telements = this,\r\n\t\t\ti = this.length,\r\n\t\t\tresolve = function() {\r\n\t\t\t\tif ( !( --count ) ) {\r\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tobj = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\r\n\t\t\tif ( tmp && tmp.empty ) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttmp.empty.add( resolve );\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve();\r\n\t\treturn defer.promise( obj );\r\n\t}\r\n} );\r\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\r\n\r\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\r\n\r\n\r\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\r\n\r\nvar isHiddenWithinTree = function( elem, el ) {\r\n\r\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\r\n\t\t// in that case, element will be second argument\r\n\t\telem = el || elem;\r\n\r\n\t\t// Inline style trumps all\r\n\t\treturn elem.style.display === \"none\" ||\r\n\t\t\telem.style.display === \"\" &&\r\n\r\n\t\t\t// Otherwise, check computed style\r\n\t\t\t// Support: Firefox <=43 - 45\r\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\r\n\t\t\t// in the document.\r\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\r\n\r\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\r\n\t};\r\n\r\nvar swap = function( elem, options, callback, args ) {\r\n\tvar ret, name,\r\n\t\told = {};\r\n\r\n\t// Remember the old values, and insert the new ones\r\n\tfor ( name in options ) {\r\n\t\told[ name ] = elem.style[ name ];\r\n\t\telem.style[ name ] = options[ name ];\r\n\t}\r\n\r\n\tret = callback.apply( elem, args || [] );\r\n\r\n\t// Revert the old values\r\n\tfor ( name in options ) {\r\n\t\telem.style[ name ] = old[ name ];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n\r\n\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted, scale,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() {\r\n\t\t\t\treturn tween.cur();\r\n\t\t\t} :\r\n\t\t\tfunction() {\r\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\r\n\t\t\t},\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Support: Firefox <=54\r\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\r\n\t\tinitial = initial / 2;\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\twhile ( maxIterations-- ) {\r\n\r\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\r\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\r\n\t\t\t\tmaxIterations = 0;\r\n\t\t\t}\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\r\n\t\t}\r\n\r\n\t\tinitialInUnit = initialInUnit * 2;\r\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\n\r\n\r\nvar defaultDisplayMap = {};\r\n\r\nfunction getDefaultDisplay( elem ) {\r\n\tvar temp,\r\n\t\tdoc = elem.ownerDocument,\r\n\t\tnodeName = elem.nodeName,\r\n\t\tdisplay = defaultDisplayMap[ nodeName ];\r\n\r\n\tif ( display ) {\r\n\t\treturn display;\r\n\t}\r\n\r\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\r\n\tdisplay = jQuery.css( temp, \"display\" );\r\n\r\n\ttemp.parentNode.removeChild( temp );\r\n\r\n\tif ( display === \"none\" ) {\r\n\t\tdisplay = \"block\";\r\n\t}\r\n\tdefaultDisplayMap[ nodeName ] = display;\r\n\r\n\treturn display;\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n\tvar display, elem,\r\n\t\tvalues = [],\r\n\t\tindex = 0,\r\n\t\tlength = elements.length;\r\n\r\n\t// Determine new display value for elements that need to change\r\n\tfor ( ; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tdisplay = elem.style.display;\r\n\t\tif ( show ) {\r\n\r\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\r\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\r\n\t\t\t// inline or about-to-be-restored)\r\n\t\t\tif ( display === \"none\" ) {\r\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\r\n\t\t\t\tif ( !values[ index ] ) {\r\n\t\t\t\t\telem.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\r\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ( display !== \"none\" ) {\r\n\t\t\t\tvalues[ index ] = \"none\";\r\n\r\n\t\t\t\t// Remember what we're overwriting\r\n\t\t\t\tdataPriv.set( elem, \"display\", display );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the display of the elements in a second loop to avoid constant reflow\r\n\tfor ( index = 0; index < length; index++ ) {\r\n\t\tif ( values[ index ] != null ) {\r\n\t\t\telements[ index ].style.display = values[ index ];\r\n\t\t}\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\njQuery.fn.extend( {\r\n\tshow: function() {\r\n\t\treturn showHide( this, true );\r\n\t},\r\n\thide: function() {\r\n\t\treturn showHide( this );\r\n\t},\r\n\ttoggle: function( state ) {\r\n\t\tif ( typeof state === \"boolean\" ) {\r\n\t\t\treturn state ? this.show() : this.hide();\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isHiddenWithinTree( this ) ) {\r\n\t\t\t\tjQuery( this ).show();\r\n\t\t\t} else {\r\n\t\t\t\tjQuery( this ).hide();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\r\n\r\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n\r\n\r\n// We have to close these tags to support XHTML (#13200)\r\nvar wrapMap = {\r\n\r\n\t// Support: IE <=9 only\r\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\r\n\r\n\t// XHTML parsers do not magically insert elements in the\r\n\t// same way that tag soup parsers do. So we cannot shorten\r\n\t// this by omitting <tbody> or other required elements.\r\n\tthead: [ 1, \"<table>\", \"</table>\" ],\r\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\r\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n\t_default: [ 0, \"\", \"\" ]\r\n};\r\n\r\n// Support: IE <=9 only\r\nwrapMap.optgroup = wrapMap.option;\r\n\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n\r\nfunction getAll( context, tag ) {\r\n\r\n\t// Support: IE <=9 - 11 only\r\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\r\n\tvar ret;\r\n\r\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\tret = context.getElementsByTagName( tag || \"*\" );\r\n\r\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\r\n\t\tret = context.querySelectorAll( tag || \"*\" );\r\n\r\n\t} else {\r\n\t\tret = [];\r\n\t}\r\n\r\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\r\n\t\treturn jQuery.merge( [ context ], ret );\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\n// Mark scripts as having already been evaluated\r\nfunction setGlobalEval( elems, refElements ) {\r\n\tvar i = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\tdataPriv.set(\r\n\t\t\telems[ i ],\r\n\t\t\t\"globalEval\",\r\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nvar rhtml = /<|&#?\\w+;/;\r\n\r\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\r\n\tvar elem, tmp, tag, wrap, contains, j,\r\n\t\tfragment = context.createDocumentFragment(),\r\n\t\tnodes = [],\r\n\t\ti = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\telem = elems[ i ];\r\n\r\n\t\tif ( elem || elem === 0 ) {\r\n\r\n\t\t\t// Add nodes directly\r\n\t\t\tif ( toType( elem ) === \"object\" ) {\r\n\r\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n\t\t\t// Convert non-html into a text node\r\n\t\t\t} else if ( !rhtml.test( elem ) ) {\r\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\r\n\r\n\t\t\t// Convert html into DOM nodes\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\r\n\r\n\t\t\t\t// Deserialize a standard representation\r\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\r\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\r\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\r\n\r\n\t\t\t\t// Descend through wrappers to the right content\r\n\t\t\t\tj = wrap[ 0 ];\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\ttmp = tmp.lastChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\r\n\r\n\t\t\t\t// Remember the top-level container\r\n\t\t\t\ttmp = fragment.firstChild;\r\n\r\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\r\n\t\t\t\ttmp.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove wrapper from fragment\r\n\tfragment.textContent = \"\";\r\n\r\n\ti = 0;\r\n\twhile ( ( elem = nodes[ i++ ] ) ) {\r\n\r\n\t\t// Skip elements already in the context collection (trac-4087)\r\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\r\n\t\t\tif ( ignored ) {\r\n\t\t\t\tignored.push( elem );\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Append to fragment\r\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tif ( contains ) {\r\n\t\t\tsetGlobalEval( tmp );\r\n\t\t}\r\n\r\n\t\t// Capture executables\r\n\t\tif ( scripts ) {\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\r\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\r\n\t\t\t\t\tscripts.push( elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn fragment;\r\n}\r\n\r\n\r\n( function() {\r\n\tvar fragment = document.createDocumentFragment(),\r\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\r\n\t\tinput = document.createElement( \"input\" );\r\n\r\n\t// Support: Android 4.0 - 4.3 only\r\n\t// Check state lost if the name is set (#11217)\r\n\t// Support: Windows Web Apps (WWA)\r\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\r\n\tinput.setAttribute( \"type\", \"radio\" );\r\n\tinput.setAttribute( \"checked\", \"checked\" );\r\n\tinput.setAttribute( \"name\", \"t\" );\r\n\r\n\tdiv.appendChild( input );\r\n\r\n\t// Support: Android <=4.1 only\r\n\t// Older WebKit doesn't clone checked state correctly in fragments\r\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n\t// Support: IE <=11 only\r\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\r\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\r\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\r\n} )();\r\nvar documentElement = document.documentElement;\r\n\r\n\r\n\r\nvar\r\n\trkeyEvent = /^key/,\r\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\r\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\n// Support: IE <=9 only\r\n// See #13393 for more info\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\nfunction on( elem, types, selector, data, fn, one ) {\r\n\tvar origFn, type;\r\n\r\n\t// Types can be a map of types/handlers\r\n\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t// ( types-Object, selector, data )\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\r\n\t\t\t// ( types-Object, data )\r\n\t\t\tdata = data || selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tfor ( type in types ) {\r\n\t\t\ton( elem, type, selector, data, types[ type ], one );\r\n\t\t}\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( data == null && fn == null ) {\r\n\r\n\t\t// ( types, fn )\r\n\t\tfn = selector;\r\n\t\tdata = selector = undefined;\r\n\t} else if ( fn == null ) {\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\r\n\t\t\t// ( types, selector, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = undefined;\r\n\t\t} else {\r\n\r\n\t\t\t// ( types, data, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t}\r\n\tif ( fn === false ) {\r\n\t\tfn = returnFalse;\r\n\t} else if ( !fn ) {\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( one === 1 ) {\r\n\t\torigFn = fn;\r\n\t\tfn = function( event ) {\r\n\r\n\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\tjQuery().off( event );\r\n\t\t\treturn origFn.apply( this, arguments );\r\n\t\t};\r\n\r\n\t\t// Use same guid so caller can remove using origFn\r\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t}\r\n\treturn elem.each( function() {\r\n\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t} );\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.get( elem );\r\n\r\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n\t\tif ( !elemData ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Ensure that invalid selectors throw exceptions at attach time\r\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\r\n\t\tif ( selector ) {\r\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !( events = elemData.events ) ) {\r\n\t\t\tevents = elemData.events = {};\r\n\t\t}\r\n\t\tif ( !( eventHandle = elemData.handle ) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend( {\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join( \".\" )\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !( handlers = events[ type ] ) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup ||\r\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\r\n\r\n\t\tif ( !elemData || !( events = elemData.events ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[ 2 ] &&\r\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\r\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown ||\r\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove data and the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdataPriv.remove( elem, \"handle events\" );\r\n\t\t}\r\n\t},\r\n\r\n\tdispatch: function( nativeEvent ) {\r\n\r\n\t\t// Make a writable jQuery.Event from the native event object\r\n\t\tvar event = jQuery.event.fix( nativeEvent );\r\n\r\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\r\n\t\t\targs = new Array( arguments.length ),\r\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[ 0 ] = event;\r\n\r\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\r\n\t\t\targs[ i ] = arguments[ i ];\r\n\t\t}\r\n\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\r\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\r\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\r\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\r\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Find delegate handlers\r\n\t\tif ( delegateCount &&\r\n\r\n\t\t\t// Support: IE <=9\r\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\r\n\t\t\tcur.nodeType &&\r\n\r\n\t\t\t// Support: Firefox <=42\r\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\r\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\r\n\t\t\t// Support: IE 11 only\r\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\r\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't check non-elements (#13208)\r\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\r\n\t\t\t\t\tmatchedHandlers = [];\r\n\t\t\t\t\tmatchedSelectors = {};\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\r\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matchedHandlers.length ) {\r\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tcur = this;\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\taddProp: function( name, hook ) {\r\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\r\n\t\t\tget: isFunction( hook ) ?\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif ( this.originalEvent ) {\r\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\r\n\t\t\t\t\t}\r\n\t\t\t\t} :\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif ( this.originalEvent ) {\r\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\tset: function( value ) {\r\n\t\t\t\tObject.defineProperty( this, name, {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\twritable: true,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tfix: function( originalEvent ) {\r\n\t\treturn originalEvent[ jQuery.expando ] ?\r\n\t\t\toriginalEvent :\r\n\t\t\tnew jQuery.Event( originalEvent );\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tfocus: {\r\n\r\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusin\"\r\n\t\t},\r\n\t\tblur: {\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusout\"\r\n\t\t},\r\n\t\tclick: {\r\n\r\n\t\t\t// For checkbox, fire native event so checked state will be right\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\r\n\t\t\t\t\tthis.click();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\treturn nodeName( event.target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\r\n\t// This \"if\" is needed for plain objects\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !( this instanceof jQuery.Event ) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\r\n\t\t\t\t// Support: Android <=2.3 only\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t\t// Create target properties\r\n\t\t// Support: Safari <=6 - 7 only\r\n\t\t// Target should not be a text node (#504, #13143)\r\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\r\n\t\t\tsrc.target.parentNode :\r\n\t\t\tsrc.target;\r\n\r\n\t\tthis.currentTarget = src.currentTarget;\r\n\t\tthis.relatedTarget = src.relatedTarget;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || Date.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tconstructor: jQuery.Event,\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\tisSimulated: false,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Includes all common event props including KeyEvent and MouseEvent specific props\r\njQuery.each( {\r\n\taltKey: true,\r\n\tbubbles: true,\r\n\tcancelable: true,\r\n\tchangedTouches: true,\r\n\tctrlKey: true,\r\n\tdetail: true,\r\n\teventPhase: true,\r\n\tmetaKey: true,\r\n\tpageX: true,\r\n\tpageY: true,\r\n\tshiftKey: true,\r\n\tview: true,\r\n\t\"char\": true,\r\n\tcharCode: true,\r\n\tkey: true,\r\n\tkeyCode: true,\r\n\tbutton: true,\r\n\tbuttons: true,\r\n\tclientX: true,\r\n\tclientY: true,\r\n\toffsetX: true,\r\n\toffsetY: true,\r\n\tpointerId: true,\r\n\tpointerType: true,\r\n\tscreenX: true,\r\n\tscreenY: true,\r\n\ttargetTouches: true,\r\n\ttoElement: true,\r\n\ttouches: true,\r\n\r\n\twhich: function( event ) {\r\n\t\tvar button = event.button;\r\n\r\n\t\t// Add which for key events\r\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\r\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\r\n\t\t}\r\n\r\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\r\n\t\t\tif ( button & 1 ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\tif ( button & 2 ) {\r\n\t\t\t\treturn 3;\r\n\t\t\t}\r\n\r\n\t\t\tif ( button & 4 ) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn event.which;\r\n\t}\r\n}, jQuery.event.addProp );\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// so that event delegation works in jQuery.\r\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\r\n//\r\n// Support: Safari 7 only\r\n// Safari sends mouseenter too often; see:\r\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\r\n// for the description of the bug (it existed in older Chrome versions as well).\r\njQuery.each( {\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ton: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn );\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ?\r\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\r\n\t\t\t\t\thandleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\r\n\t/* eslint-disable max-len */\r\n\r\n\t// See https://github.com/eslint/eslint/issues/3229\r\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\r\n\r\n\t/* eslint-enable */\r\n\r\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\r\n\t// In IE/Edge using regex groups here causes severe slowdowns.\r\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\r\n\trnoInnerhtml = /<script|<style|<link/i,\r\n\r\n\t// checked=\"checked\" or checked\r\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\r\n\r\n// Prefer a tbody over its parent table for containing new rows\r\nfunction manipulationTarget( elem, content ) {\r\n\tif ( nodeName( elem, \"table\" ) &&\r\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\r\n\r\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\nfunction disableScript( elem ) {\r\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\r\n\treturn elem;\r\n}\r\nfunction restoreScript( elem ) {\r\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\r\n\t\telem.type = elem.type.slice( 5 );\r\n\t} else {\r\n\t\telem.removeAttribute( \"type\" );\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\r\n\r\n\tif ( dest.nodeType !== 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 1. Copy private data: events, handlers, etc.\r\n\tif ( dataPriv.hasData( src ) ) {\r\n\t\tpdataOld = dataPriv.access( src );\r\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\r\n\t\tevents = pdataOld.events;\r\n\r\n\t\tif ( events ) {\r\n\t\t\tdelete pdataCur.handle;\r\n\t\t\tpdataCur.events = {};\r\n\r\n\t\t\tfor ( type in events ) {\r\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 2. Copy user data\r\n\tif ( dataUser.hasData( src ) ) {\r\n\t\tudataOld = dataUser.access( src );\r\n\t\tudataCur = jQuery.extend( {}, udataOld );\r\n\r\n\t\tdataUser.set( dest, udataCur );\r\n\t}\r\n}\r\n\r\n// Fix IE bugs, see support tests\r\nfunction fixInput( src, dest ) {\r\n\tvar nodeName = dest.nodeName.toLowerCase();\r\n\r\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\r\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n\t\tdest.checked = src.checked;\r\n\r\n\t// Fails to return the selected option to the default selected state when cloning options\r\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n\t\tdest.defaultValue = src.defaultValue;\r\n\t}\r\n}\r\n\r\nfunction domManip( collection, args, callback, ignored ) {\r\n\r\n\t// Flatten any nested arrays\r\n\targs = concat.apply( [], args );\r\n\r\n\tvar fragment, first, scripts, hasScripts, node, doc,\r\n\t\ti = 0,\r\n\t\tl = collection.length,\r\n\t\tiNoClone = l - 1,\r\n\t\tvalue = args[ 0 ],\r\n\t\tvalueIsFunction = isFunction( value );\r\n\r\n\t// We can't cloneNode fragments that contain checked, in WebKit\r\n\tif ( valueIsFunction ||\r\n\t\t\t( l > 1 && typeof value === \"string\" &&\r\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\r\n\t\treturn collection.each( function( index ) {\r\n\t\t\tvar self = collection.eq( index );\r\n\t\t\tif ( valueIsFunction ) {\r\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\r\n\t\t\t}\r\n\t\t\tdomManip( self, args, callback, ignored );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( l ) {\r\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\r\n\t\tfirst = fragment.firstChild;\r\n\r\n\t\tif ( fragment.childNodes.length === 1 ) {\r\n\t\t\tfragment = first;\r\n\t\t}\r\n\r\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\r\n\t\tif ( first || ignored ) {\r\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n\t\t\thasScripts = scripts.length;\r\n\r\n\t\t\t// Use the original fragment for the last item\r\n\t\t\t// instead of the first because it can end up\r\n\t\t\t// being emptied incorrectly in certain situations (#8070).\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tnode = fragment;\r\n\r\n\t\t\t\tif ( i !== iNoClone ) {\r\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\r\n\r\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\r\n\t\t\t\t\tif ( hasScripts ) {\r\n\r\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback.call( collection[ i ], node, i );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasScripts ) {\r\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n\t\t\t\t// Reenable scripts\r\n\t\t\t\tjQuery.map( scripts, restoreScript );\r\n\r\n\t\t\t\t// Evaluate executable scripts on first document insertion\r\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\r\n\t\t\t\t\tnode = scripts[ i ];\r\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\r\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\r\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\r\n\r\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\r\n\r\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\r\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\r\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn collection;\r\n}\r\n\r\nfunction remove( elem, selector, keepData ) {\r\n\tvar node,\r\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\r\n\t\ti = 0;\r\n\r\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\r\n\t\tif ( !keepData && node.nodeType === 1 ) {\r\n\t\t\tjQuery.cleanData( getAll( node ) );\r\n\t\t}\r\n\r\n\t\tif ( node.parentNode ) {\r\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\r\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\r\n\t\t\t}\r\n\t\t\tnode.parentNode.removeChild( node );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\njQuery.extend( {\r\n\thtmlPrefilter: function( html ) {\r\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\t},\r\n\r\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n\t\tvar i, l, srcElements, destElements,\r\n\t\t\tclone = elem.cloneNode( true ),\r\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Fix IE cloning issues\r\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\r\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\r\n\t\t\tdestElements = getAll( clone );\r\n\t\t\tsrcElements = getAll( elem );\r\n\r\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy the events from the original to the clone\r\n\t\tif ( dataAndEvents ) {\r\n\t\t\tif ( deepDataAndEvents ) {\r\n\t\t\t\tsrcElements = srcElements || getAll( elem );\r\n\t\t\t\tdestElements = destElements || getAll( clone );\r\n\r\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcloneCopyEvent( elem, clone );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tdestElements = getAll( clone, \"script\" );\r\n\t\tif ( destElements.length > 0 ) {\r\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n\t\t}\r\n\r\n\t\t// Return the cloned set\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcleanData: function( elems ) {\r\n\t\tvar data, elem, type,\r\n\t\t\tspecial = jQuery.event.special,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\tif ( acceptData( elem ) ) {\r\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\r\n\t\t\t\t\tif ( data.events ) {\r\n\t\t\t\t\t\tfor ( type in data.events ) {\r\n\t\t\t\t\t\t\tif ( special[ type ] ) {\r\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n\r\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support: Chrome <=35 - 45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\r\n\r\n\t\t\t\t\t// Support: Chrome <=35 - 45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdetach: function( selector ) {\r\n\t\treturn remove( this, selector, true );\r\n\t},\r\n\r\n\tremove: function( selector ) {\r\n\t\treturn remove( this, selector );\r\n\t},\r\n\r\n\ttext: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\treturn value === undefined ?\r\n\t\t\t\tjQuery.text( this ) :\r\n\t\t\t\tthis.empty().each( function() {\r\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\t\t\tthis.textContent = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\tappend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.appendChild( elem );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tprepend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tafter: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tempty: function() {\r\n\t\tvar elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\r\n\t\t\tif ( elem.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Prevent memory leaks\r\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\r\n\t\t\t\t// Remove any remaining nodes\r\n\t\t\t\telem.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n\t\treturn this.map( function() {\r\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n\t\t} );\r\n\t},\r\n\r\n\thtml: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar elem = this[ 0 ] || {},\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = this.length;\r\n\r\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\r\n\t\t\t\treturn elem.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// See if we can take a shortcut and just use innerHTML\r\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\r\n\r\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\t\t\telem = this[ i ] || {};\r\n\r\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\t\t\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem = 0;\r\n\r\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n\t\t\t\t} catch ( e ) {}\r\n\t\t\t}\r\n\r\n\t\t\tif ( elem ) {\r\n\t\t\t\tthis.empty().append( value );\r\n\t\t\t}\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\treplaceWith: function() {\r\n\t\tvar ignored = [];\r\n\r\n\t\t// Make the changes, replacing each non-ignored context element with the new content\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tvar parent = this.parentNode;\r\n\r\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\r\n\t\t\t\tjQuery.cleanData( getAll( this ) );\r\n\t\t\t\tif ( parent ) {\r\n\t\t\t\t\tparent.replaceChild( elem, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Force callback invocation\r\n\t\t}, ignored );\r\n\t}\r\n} );\r\n\r\njQuery.each( {\r\n\tappendTo: \"append\",\r\n\tprependTo: \"prepend\",\r\n\tinsertBefore: \"before\",\r\n\tinsertAfter: \"after\",\r\n\treplaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n\tjQuery.fn[ name ] = function( selector ) {\r\n\t\tvar elems,\r\n\t\t\tret = [],\r\n\t\t\tinsert = jQuery( selector ),\r\n\t\t\tlast = insert.length - 1,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; i <= last; i++ ) {\r\n\t\t\telems = i === last ? this : this.clone( true );\r\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\r\n\r\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\tpush.apply( ret, elems.get() );\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( ret );\r\n\t};\r\n} );\r\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\r\n\r\nvar getStyles = function( elem ) {\r\n\r\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n\t\t// IE throws on elements created in popups\r\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n\t\tvar view = elem.ownerDocument.defaultView;\r\n\r\n\t\tif ( !view || !view.opener ) {\r\n\t\t\tview = window;\r\n\t\t}\r\n\r\n\t\treturn view.getComputedStyle( elem );\r\n\t};\r\n\r\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\r\n\r\n\r\n\r\n( function() {\r\n\r\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\r\n\t// so they're executed at the same time to save the second computation.\r\n\tfunction computeStyleTests() {\r\n\r\n\t\t// This is a singleton, we need to execute it only once\r\n\t\tif ( !div ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\r\n\t\t\t\"margin-top:1px;padding:0;border:0\";\r\n\t\tdiv.style.cssText =\r\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\r\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\r\n\t\t\t\"width:60%;top:1%\";\r\n\t\tdocumentElement.appendChild( container ).appendChild( div );\r\n\r\n\t\tvar divStyle = window.getComputedStyle( div );\r\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\r\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\r\n\t\t// Some styles come back with percentage values, even though they shouldn't\r\n\t\tdiv.style.right = \"60%\";\r\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\r\n\r\n\t\t// Support: IE 9 - 11 only\r\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\r\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\r\n\r\n\t\t// Support: IE 9 only\r\n\t\t// Detect overflow:scroll screwiness (gh-3699)\r\n\t\tdiv.style.position = \"absolute\";\r\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\r\n\r\n\t\tdocumentElement.removeChild( container );\r\n\r\n\t\t// Nullify the div so it wouldn't be stored in the memory and\r\n\t\t// it will also be a sign that checks already performed\r\n\t\tdiv = null;\r\n\t}\r\n\r\n\tfunction roundPixelMeasures( measure ) {\r\n\t\treturn Math.round( parseFloat( measure ) );\r\n\t}\r\n\r\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\r\n\t\treliableMarginLeftVal,\r\n\t\tcontainer = document.createElement( \"div\" ),\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t// Finish early in limited (non-browser) environments\r\n\tif ( !div.style ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Support: IE <=9 - 11 only\r\n\t// Style of cloned element affects source element cloned (#8908)\r\n\tdiv.style.backgroundClip = \"content-box\";\r\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\r\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n\tjQuery.extend( support, {\r\n\t\tboxSizingReliable: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn boxSizingReliableVal;\r\n\t\t},\r\n\t\tpixelBoxStyles: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelBoxStylesVal;\r\n\t\t},\r\n\t\tpixelPosition: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelPositionVal;\r\n\t\t},\r\n\t\treliableMarginLeft: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn reliableMarginLeftVal;\r\n\t\t},\r\n\t\tscrollboxSize: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn scrollboxSizeVal;\r\n\t\t}\r\n\t} );\r\n} )();\r\n\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\r\n\t\t// Support: Firefox 51+\r\n\t\t// Retrieving style before computed somehow\r\n\t\t// fixes an issue with getting wrong values\r\n\t\t// on detached elements\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\r\n\t// getPropertyValue is needed for:\r\n\t//   .css('filter') (IE 9 only, #12537)\r\n\t//   .css('--customProperty) (#3144)\r\n\tif ( computed ) {\r\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\r\n\r\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n\t\t\tret = jQuery.style( elem, name );\r\n\t\t}\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\r\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE <=9 - 11 only\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\n\r\nfunction addGetHookIf( conditionFn, hookFn ) {\r\n\r\n\t// Define the hook, we'll check on the first run if it's really needed.\r\n\treturn {\r\n\t\tget: function() {\r\n\t\t\tif ( conditionFn() ) {\r\n\r\n\t\t\t\t// Hook not needed (or it's not possible to use it due\r\n\t\t\t\t// to missing dependency), remove it.\r\n\t\t\t\tdelete this.get;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\r\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nvar\r\n\r\n\t// Swappable if display is none or starts with table\r\n\t// except \"table\", \"table-cell\", or \"table-caption\"\r\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n\trcustomProp = /^--/,\r\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n\tcssNormalTransform = {\r\n\t\tletterSpacing: \"0\",\r\n\t\tfontWeight: \"400\"\r\n\t},\r\n\r\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\r\n\temptyStyle = document.createElement( \"div\" ).style;\r\n\r\n// Return a css property mapped to a potentially vendor prefixed property\r\nfunction vendorPropName( name ) {\r\n\r\n\t// Shortcut for names that are not vendor prefixed\r\n\tif ( name in emptyStyle ) {\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// Check for vendor prefixed names\r\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\r\n\t\ti = cssPrefixes.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tname = cssPrefixes[ i ] + capName;\r\n\t\tif ( name in emptyStyle ) {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Return a property mapped along what jQuery.cssProps suggests or to\r\n// a vendor prefixed property.\r\nfunction finalPropName( name ) {\r\n\tvar ret = jQuery.cssProps[ name ];\r\n\tif ( !ret ) {\r\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction setPositiveNumber( elem, value, subtract ) {\r\n\r\n\t// Any relative (+/-) values have already been\r\n\t// normalized at this point\r\n\tvar matches = rcssNum.exec( value );\r\n\treturn matches ?\r\n\r\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\r\n\t\tvalue;\r\n}\r\n\r\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\r\n\tvar i = dimension === \"width\" ? 1 : 0,\r\n\t\textra = 0,\r\n\t\tdelta = 0;\r\n\r\n\t// Adjustment may not be necessary\r\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfor ( ; i < 4; i += 2 ) {\r\n\r\n\t\t// Both box models exclude margin\r\n\t\tif ( box === \"margin\" ) {\r\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\r\n\t\t}\r\n\r\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\r\n\t\tif ( !isBorderBox ) {\r\n\r\n\t\t\t// Add padding\r\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n\t\t\t// For \"border\" or \"margin\", add border\r\n\t\t\tif ( box !== \"padding\" ) {\r\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\r\n\t\t\t// But still keep track of it otherwise\r\n\t\t\t} else {\r\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\r\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\r\n\t\t// \"padding\" or \"margin\"\r\n\t\t} else {\r\n\r\n\t\t\t// For \"content\", subtract padding\r\n\t\t\tif ( box === \"content\" ) {\r\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\t\t\t}\r\n\r\n\t\t\t// For \"content\" or \"padding\", subtract border\r\n\t\t\tif ( box !== \"margin\" ) {\r\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\r\n\tif ( !isBorderBox && computedVal >= 0 ) {\r\n\r\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\r\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\r\n\t\tdelta += Math.max( 0, Math.ceil(\r\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\r\n\t\t\tcomputedVal -\r\n\t\t\tdelta -\r\n\t\t\textra -\r\n\t\t\t0.5\r\n\t\t) );\r\n\t}\r\n\r\n\treturn delta;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, dimension, extra ) {\r\n\r\n\t// Start with computed style\r\n\tvar styles = getStyles( elem ),\r\n\t\tval = curCSS( elem, dimension, styles ),\r\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\tvalueIsBorderBox = isBorderBox;\r\n\r\n\t// Support: Firefox <=54\r\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\r\n\tif ( rnumnonpx.test( val ) ) {\r\n\t\tif ( !extra ) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\t\tval = \"auto\";\r\n\t}\r\n\r\n\t// Check for style in case a browser which returns unreliable values\r\n\t// for getComputedStyle silently falls back to the reliable elem.style\r\n\tvalueIsBorderBox = valueIsBorderBox &&\r\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\r\n\r\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\r\n\t// This happens for inline elements with no explicit setting (gh-3571)\r\n\t// Support: Android <=4.1 - 4.3 only\r\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\r\n\tif ( val === \"auto\" ||\r\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\r\n\r\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\r\n\r\n\t\t// offsetWidth/offsetHeight provide border-box values\r\n\t\tvalueIsBorderBox = true;\r\n\t}\r\n\r\n\t// Normalize \"\" and auto\r\n\tval = parseFloat( val ) || 0;\r\n\r\n\t// Adjust for the element's box model\r\n\treturn ( val +\r\n\t\tboxModelAdjustment(\r\n\t\t\telem,\r\n\t\t\tdimension,\r\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\r\n\t\t\tvalueIsBorderBox,\r\n\t\t\tstyles,\r\n\r\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\r\n\t\t\tval\r\n\t\t)\r\n\t) + \"px\";\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Add in style property hooks for overriding the default\r\n\t// behavior of getting and setting a style property\r\n\tcssHooks: {\r\n\t\topacity: {\r\n\t\t\tget: function( elem, computed ) {\r\n\t\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t\t// We should always get a number back from opacity\r\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\r\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Don't automatically add \"px\" to these possibly-unitless properties\r\n\tcssNumber: {\r\n\t\t\"animationIterationCount\": true,\r\n\t\t\"columnCount\": true,\r\n\t\t\"fillOpacity\": true,\r\n\t\t\"flexGrow\": true,\r\n\t\t\"flexShrink\": true,\r\n\t\t\"fontWeight\": true,\r\n\t\t\"lineHeight\": true,\r\n\t\t\"opacity\": true,\r\n\t\t\"order\": true,\r\n\t\t\"orphans\": true,\r\n\t\t\"widows\": true,\r\n\t\t\"zIndex\": true,\r\n\t\t\"zoom\": true\r\n\t},\r\n\r\n\t// Add in properties whose names you wish to fix before\r\n\t// setting or getting the value\r\n\tcssProps: {},\r\n\r\n\t// Get and set the style property on a DOM Node\r\n\tstyle: function( elem, name, value, extra ) {\r\n\r\n\t\t// Don't set styles on text and comment nodes\r\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tvar ret, type, hooks,\r\n\t\t\torigName = camelCase( name ),\r\n\t\t\tisCustomProp = rcustomProp.test( name ),\r\n\t\t\tstyle = elem.style;\r\n\r\n\t\t// Make sure that we're working with the right name. We don't\r\n\t\t// want to query the value if it is a CSS custom property\r\n\t\t// since they are user-defined.\r\n\t\tif ( !isCustomProp ) {\r\n\t\t\tname = finalPropName( origName );\r\n\t\t}\r\n\r\n\t\t// Gets hook for the prefixed version, then unprefixed version\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// Check if we're setting a value\r\n\t\tif ( value !== undefined ) {\r\n\t\t\ttype = typeof value;\r\n\r\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\r\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\r\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\r\n\r\n\t\t\t\t// Fixes bug #9237\r\n\t\t\t\ttype = \"number\";\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\r\n\t\t\tif ( value == null || value !== value ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\r\n\t\t\tif ( type === \"number\" ) {\r\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\r\n\t\t\t}\r\n\r\n\t\t\t// background-* props affect original clone's values\r\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\r\n\t\t\t\tstyle[ name ] = \"inherit\";\r\n\t\t\t}\r\n\r\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\r\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\tif ( isCustomProp ) {\r\n\t\t\t\t\tstyle.setProperty( name, value );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyle[ name ] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// If a hook was provided get the non-computed value from there\r\n\t\t\tif ( hooks && \"get\" in hooks &&\r\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise just get the value from the style object\r\n\t\t\treturn style[ name ];\r\n\t\t}\r\n\t},\r\n\r\n\tcss: function( elem, name, extra, styles ) {\r\n\t\tvar val, num, hooks,\r\n\t\t\torigName = camelCase( name ),\r\n\t\t\tisCustomProp = rcustomProp.test( name );\r\n\r\n\t\t// Make sure that we're working with the right name. We don't\r\n\t\t// want to modify the value if it is a CSS custom property\r\n\t\t// since they are user-defined.\r\n\t\tif ( !isCustomProp ) {\r\n\t\t\tname = finalPropName( origName );\r\n\t\t}\r\n\r\n\t\t// Try prefixed name followed by the unprefixed name\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// If a hook was provided get the computed value from there\r\n\t\tif ( hooks && \"get\" in hooks ) {\r\n\t\t\tval = hooks.get( elem, true, extra );\r\n\t\t}\r\n\r\n\t\t// Otherwise, if a way to get the computed value exists, use that\r\n\t\tif ( val === undefined ) {\r\n\t\t\tval = curCSS( elem, name, styles );\r\n\t\t}\r\n\r\n\t\t// Convert \"normal\" to computed value\r\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\r\n\t\t\tval = cssNormalTransform[ name ];\r\n\t\t}\r\n\r\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\r\n\t\tif ( extra === \"\" || extra ) {\r\n\t\t\tnum = parseFloat( val );\r\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\r\n\t\t}\r\n\r\n\t\treturn val;\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\r\n\tjQuery.cssHooks[ dimension ] = {\r\n\t\tget: function( elem, computed, extra ) {\r\n\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\r\n\t\t\t\t// but it must have a current display style that would benefit\r\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\r\n\r\n\t\t\t\t\t// Support: Safari 8+\r\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\r\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\r\n\t\t\t\t\t// Support: IE <=11 only\r\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\r\n\t\t\t\t\t// in IE throws an error.\r\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\r\n\t\t\t\t\t\tswap( elem, cssShow, function() {\r\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\r\n\t\t\t\t\t\t} ) :\r\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tset: function( elem, value, extra ) {\r\n\t\t\tvar matches,\r\n\t\t\t\tstyles = getStyles( elem ),\r\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\t\t\tsubtract = extra && boxModelAdjustment(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\tdimension,\r\n\t\t\t\t\textra,\r\n\t\t\t\t\tisBorderBox,\r\n\t\t\t\t\tstyles\r\n\t\t\t\t);\r\n\r\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\r\n\t\t\t// faking a content-box to get border and padding (gh-3699)\r\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\r\n\t\t\t\tsubtract -= Math.ceil(\r\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\r\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\r\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\r\n\t\t\t\t\t0.5\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Convert to pixels if value adjustment is needed\r\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\r\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\r\n\r\n\t\t\t\telem.style[ dimension ] = value;\r\n\t\t\t\tvalue = jQuery.css( elem, dimension );\r\n\t\t\t}\r\n\r\n\t\t\treturn setPositiveNumber( elem, value, subtract );\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\r\n\t\t\t\telem.getBoundingClientRect().left -\r\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\r\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\r\n\t\t\t\t\t} )\r\n\t\t\t\t) + \"px\";\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each( {\r\n\tmargin: \"\",\r\n\tpadding: \"\",\r\n\tborder: \"Width\"\r\n}, function( prefix, suffix ) {\r\n\tjQuery.cssHooks[ prefix + suffix ] = {\r\n\t\texpand: function( value ) {\r\n\t\t\tvar i = 0,\r\n\t\t\t\texpanded = {},\r\n\r\n\t\t\t\t// Assumes a single number if not a string\r\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\r\n\r\n\t\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\r\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn expanded;\r\n\t\t}\r\n\t};\r\n\r\n\tif ( prefix !== \"margin\" ) {\r\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tcss: function( name, value ) {\r\n\t\treturn access( this, function( elem, name, value ) {\r\n\t\t\tvar styles, len,\r\n\t\t\t\tmap = {},\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tif ( Array.isArray( name ) ) {\r\n\t\t\t\tstyles = getStyles( elem );\r\n\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}\r\n\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tjQuery.style( elem, name, value ) :\r\n\t\t\t\tjQuery.css( elem, name );\r\n\t\t}, name, value, arguments.length > 1 );\r\n\t}\r\n} );\r\n\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n\tconstructor: Tween,\r\n\tinit: function( elem, options, prop, end, easing, unit ) {\r\n\t\tthis.elem = elem;\r\n\t\tthis.prop = prop;\r\n\t\tthis.easing = easing || jQuery.easing._default;\r\n\t\tthis.options = options;\r\n\t\tthis.start = this.now = this.cur();\r\n\t\tthis.end = end;\r\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\t},\r\n\tcur: function() {\r\n\t\tvar hooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\treturn hooks && hooks.get ?\r\n\t\t\thooks.get( this ) :\r\n\t\t\tTween.propHooks._default.get( this );\r\n\t},\r\n\trun: function( percent ) {\r\n\t\tvar eased,\r\n\t\t\thooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\tif ( this.options.duration ) {\r\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\r\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.pos = eased = percent;\r\n\t\t}\r\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n\t\tif ( this.options.step ) {\r\n\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n\t\t}\r\n\r\n\t\tif ( hooks && hooks.set ) {\r\n\t\t\thooks.set( this );\r\n\t\t} else {\r\n\t\t\tTween.propHooks._default.set( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n\t_default: {\r\n\t\tget: function( tween ) {\r\n\t\t\tvar result;\r\n\r\n\t\t\t// Use a property on the element directly when it is not a DOM element,\r\n\t\t\t// or when there is no matching style property that exists.\r\n\t\t\tif ( tween.elem.nodeType !== 1 ||\r\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\r\n\t\t\t\treturn tween.elem[ tween.prop ];\r\n\t\t\t}\r\n\r\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\r\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\r\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\r\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\r\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\r\n\r\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\r\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\r\n\t\t},\r\n\t\tset: function( tween ) {\r\n\r\n\t\t\t// Use step hook for back compat.\r\n\t\t\t// Use cssHook if its there.\r\n\t\t\t// Use .style if available and use plain properties where available.\r\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\r\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\r\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\r\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\r\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\r\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n\t\t\t} else {\r\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Support: IE <=9 only\r\n// Panic based approach to setting things on disconnected nodes\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n\tset: function( tween ) {\r\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.easing = {\r\n\tlinear: function( p ) {\r\n\t\treturn p;\r\n\t},\r\n\tswing: function( p ) {\r\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\r\n\t},\r\n\t_default: \"swing\"\r\n};\r\n\r\njQuery.fx = Tween.prototype.init;\r\n\r\n// Back compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\n\r\n\r\n\r\nvar\r\n\tfxNow, inProgress,\r\n\trfxtypes = /^(?:toggle|show|hide)$/,\r\n\trrun = /queueHooks$/;\r\n\r\nfunction schedule() {\r\n\tif ( inProgress ) {\r\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\r\n\t\t\twindow.requestAnimationFrame( schedule );\r\n\t\t} else {\r\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\r\n\t\t}\r\n\r\n\t\tjQuery.fx.tick();\r\n\t}\r\n}\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n\twindow.setTimeout( function() {\r\n\t\tfxNow = undefined;\r\n\t} );\r\n\treturn ( fxNow = Date.now() );\r\n}\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n\tvar which,\r\n\t\ti = 0,\r\n\t\tattrs = { height: type };\r\n\r\n\t// If we include width, step value is 1 to do all cssExpand values,\r\n\t// otherwise step value is 2 to skip over Left and Right\r\n\tincludeWidth = includeWidth ? 1 : 0;\r\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\r\n\t\twhich = cssExpand[ i ];\r\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n\t}\r\n\r\n\tif ( includeWidth ) {\r\n\t\tattrs.opacity = attrs.width = type;\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\nfunction createTween( value, prop, animation ) {\r\n\tvar tween,\r\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\r\n\t\tindex = 0,\r\n\t\tlength = collection.length;\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\r\n\r\n\t\t\t// We're done with this property\r\n\t\t\treturn tween;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\r\n\t\tisBox = \"width\" in props || \"height\" in props,\r\n\t\tanim = this,\r\n\t\torig = {},\r\n\t\tstyle = elem.style,\r\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\r\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\r\n\r\n\t// Queue-skipping animations hijack the fx hooks\r\n\tif ( !opts.queue ) {\r\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\r\n\t\tif ( hooks.unqueued == null ) {\r\n\t\t\thooks.unqueued = 0;\r\n\t\t\toldfire = hooks.empty.fire;\r\n\t\t\thooks.empty.fire = function() {\r\n\t\t\t\tif ( !hooks.unqueued ) {\r\n\t\t\t\t\toldfire();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\thooks.unqueued++;\r\n\r\n\t\tanim.always( function() {\r\n\r\n\t\t\t// Ensure the complete handler is called before this completes\r\n\t\t\tanim.always( function() {\r\n\t\t\t\thooks.unqueued--;\r\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n\t\t\t\t\thooks.empty.fire();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Detect show/hide animations\r\n\tfor ( prop in props ) {\r\n\t\tvalue = props[ prop ];\r\n\t\tif ( rfxtypes.test( value ) ) {\r\n\t\t\tdelete props[ prop ];\r\n\t\t\ttoggle = toggle || value === \"toggle\";\r\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n\r\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\r\n\t\t\t\t// there is still data from a stopped show/hide\r\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\r\n\t\t\t\t\thidden = true;\r\n\r\n\t\t\t\t// Ignore all other no-op show/hide data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n\t\t}\r\n\t}\r\n\r\n\t// Bail out if this is a no-op like .hide().hide()\r\n\tpropTween = !jQuery.isEmptyObject( props );\r\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Restrict \"overflow\" and \"display\" styles during box animations\r\n\tif ( isBox && elem.nodeType === 1 ) {\r\n\r\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\r\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\r\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\r\n\t\t// the overflowX value there.\r\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\r\n\t\trestoreDisplay = dataShow && dataShow.display;\r\n\t\tif ( restoreDisplay == null ) {\r\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\r\n\t\t}\r\n\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\t\tif ( display === \"none\" ) {\r\n\t\t\tif ( restoreDisplay ) {\r\n\t\t\t\tdisplay = restoreDisplay;\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\r\n\t\t\t\tshowHide( [ elem ], true );\r\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\r\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\t\t\t\tshowHide( [ elem ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Animate inline elements as inline-block\r\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\r\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\r\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\r\n\t\t\t\tif ( !propTween ) {\r\n\t\t\t\t\tanim.done( function() {\r\n\t\t\t\t\t\tstyle.display = restoreDisplay;\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tif ( restoreDisplay == null ) {\r\n\t\t\t\t\t\tdisplay = style.display;\r\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstyle.display = \"inline-block\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif ( opts.overflow ) {\r\n\t\tstyle.overflow = \"hidden\";\r\n\t\tanim.always( function() {\r\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\r\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\r\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\r\n\t\t} );\r\n\t}\r\n\r\n\t// Implement show/hide animations\r\n\tpropTween = false;\r\n\tfor ( prop in orig ) {\r\n\r\n\t\t// General show/hide setup for this element animation\r\n\t\tif ( !propTween ) {\r\n\t\t\tif ( dataShow ) {\r\n\t\t\t\tif ( \"hidden\" in dataShow ) {\r\n\t\t\t\t\thidden = dataShow.hidden;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\r\n\t\t\t}\r\n\r\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\r\n\t\t\tif ( toggle ) {\r\n\t\t\t\tdataShow.hidden = !hidden;\r\n\t\t\t}\r\n\r\n\t\t\t// Show elements before animating them\r\n\t\t\tif ( hidden ) {\r\n\t\t\t\tshowHide( [ elem ], true );\r\n\t\t\t}\r\n\r\n\t\t\t/* eslint-disable no-loop-func */\r\n\r\n\t\t\tanim.done( function() {\r\n\r\n\t\t\t/* eslint-enable no-loop-func */\r\n\r\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\r\n\t\t\t\tif ( !hidden ) {\r\n\t\t\t\t\tshowHide( [ elem ] );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\r\n\t\t\t\tfor ( prop in orig ) {\r\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Per-property setup\r\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\t\tif ( !( prop in dataShow ) ) {\r\n\t\t\tdataShow[ prop ] = propTween.start;\r\n\t\t\tif ( hidden ) {\r\n\t\t\t\tpropTween.end = propTween.start;\r\n\t\t\t\tpropTween.start = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n\tvar index, name, easing, value, hooks;\r\n\r\n\t// camelCase, specialEasing and expand cssHook pass\r\n\tfor ( index in props ) {\r\n\t\tname = camelCase( index );\r\n\t\teasing = specialEasing[ name ];\r\n\t\tvalue = props[ index ];\r\n\t\tif ( Array.isArray( value ) ) {\r\n\t\t\teasing = value[ 1 ];\r\n\t\t\tvalue = props[ index ] = value[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( index !== name ) {\r\n\t\t\tprops[ name ] = value;\r\n\t\t\tdelete props[ index ];\r\n\t\t}\r\n\r\n\t\thooks = jQuery.cssHooks[ name ];\r\n\t\tif ( hooks && \"expand\" in hooks ) {\r\n\t\t\tvalue = hooks.expand( value );\r\n\t\t\tdelete props[ name ];\r\n\r\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\r\n\t\t\t// Reusing 'index' because we have the correct \"name\"\r\n\t\t\tfor ( index in value ) {\r\n\t\t\t\tif ( !( index in props ) ) {\r\n\t\t\t\t\tprops[ index ] = value[ index ];\r\n\t\t\t\t\tspecialEasing[ index ] = easing;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tspecialEasing[ name ] = easing;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n\tvar result,\r\n\t\tstopped,\r\n\t\tindex = 0,\r\n\t\tlength = Animation.prefilters.length,\r\n\t\tdeferred = jQuery.Deferred().always( function() {\r\n\r\n\t\t\t// Don't match elem in the :animated selector\r\n\t\t\tdelete tick.elem;\r\n\t\t} ),\r\n\t\ttick = function() {\r\n\t\t\tif ( stopped ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar currentTime = fxNow || createFxNow(),\r\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n\r\n\t\t\t\t// Support: Android 2.3 only\r\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\r\n\t\t\t\ttemp = remaining / animation.duration || 0,\r\n\t\t\t\tpercent = 1 - temp,\r\n\t\t\t\tindex = 0,\r\n\t\t\t\tlength = animation.tweens.length;\r\n\r\n\t\t\tfor ( ; index < length; index++ ) {\r\n\t\t\t\tanimation.tweens[ index ].run( percent );\r\n\t\t\t}\r\n\r\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\r\n\r\n\t\t\t// If there's more to do, yield\r\n\t\t\tif ( percent < 1 && length ) {\r\n\t\t\t\treturn remaining;\r\n\t\t\t}\r\n\r\n\t\t\t// If this was an empty animation, synthesize a final progress notification\r\n\t\t\tif ( !length ) {\r\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Resolve the animation and report its conclusion\r\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tanimation = deferred.promise( {\r\n\t\t\telem: elem,\r\n\t\t\tprops: jQuery.extend( {}, properties ),\r\n\t\t\topts: jQuery.extend( true, {\r\n\t\t\t\tspecialEasing: {},\r\n\t\t\t\teasing: jQuery.easing._default\r\n\t\t\t}, options ),\r\n\t\t\toriginalProperties: properties,\r\n\t\t\toriginalOptions: options,\r\n\t\t\tstartTime: fxNow || createFxNow(),\r\n\t\t\tduration: options.duration,\r\n\t\t\ttweens: [],\r\n\t\t\tcreateTween: function( prop, end ) {\r\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n\t\t\t\tanimation.tweens.push( tween );\r\n\t\t\t\treturn tween;\r\n\t\t\t},\r\n\t\t\tstop: function( gotoEnd ) {\r\n\t\t\t\tvar index = 0,\r\n\r\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\r\n\t\t\t\t\t// otherwise we skip this part\r\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\r\n\t\t\t\tif ( stopped ) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tstopped = true;\r\n\t\t\t\tfor ( ; index < length; index++ ) {\r\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\r\n\t\t\t\tif ( gotoEnd ) {\r\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} ),\r\n\t\tprops = animation.props;\r\n\r\n\tpropFilter( props, animation.opts.specialEasing );\r\n\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\r\n\t\tif ( result ) {\r\n\t\t\tif ( isFunction( result.stop ) ) {\r\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\r\n\t\t\t\t\tresult.stop.bind( result );\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.map( props, createTween, animation );\r\n\r\n\tif ( isFunction( animation.opts.start ) ) {\r\n\t\tanimation.opts.start.call( elem, animation );\r\n\t}\r\n\r\n\t// Attach callbacks from options\r\n\tanimation\r\n\t\t.progress( animation.opts.progress )\r\n\t\t.done( animation.opts.done, animation.opts.complete )\r\n\t\t.fail( animation.opts.fail )\r\n\t\t.always( animation.opts.always );\r\n\r\n\tjQuery.fx.timer(\r\n\t\tjQuery.extend( tick, {\r\n\t\t\telem: elem,\r\n\t\t\tanim: animation,\r\n\t\t\tqueue: animation.opts.queue\r\n\t\t} )\r\n\t);\r\n\r\n\treturn animation;\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\r\n\ttweeners: {\r\n\t\t\"*\": [ function( prop, value ) {\r\n\t\t\tvar tween = this.createTween( prop, value );\r\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\r\n\t\t\treturn tween;\r\n\t\t} ]\r\n\t},\r\n\r\n\ttweener: function( props, callback ) {\r\n\t\tif ( isFunction( props ) ) {\r\n\t\t\tcallback = props;\r\n\t\t\tprops = [ \"*\" ];\r\n\t\t} else {\r\n\t\t\tprops = props.match( rnothtmlwhite );\r\n\t\t}\r\n\r\n\t\tvar prop,\r\n\t\t\tindex = 0,\r\n\t\t\tlength = props.length;\r\n\r\n\t\tfor ( ; index < length; index++ ) {\r\n\t\t\tprop = props[ index ];\r\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\r\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\r\n\t\t}\r\n\t},\r\n\r\n\tprefilters: [ defaultPrefilter ],\r\n\r\n\tprefilter: function( callback, prepend ) {\r\n\t\tif ( prepend ) {\r\n\t\t\tAnimation.prefilters.unshift( callback );\r\n\t\t} else {\r\n\t\t\tAnimation.prefilters.push( callback );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n\t\tcomplete: fn || !fn && easing ||\r\n\t\t\tisFunction( speed ) && speed,\r\n\t\tduration: speed,\r\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\r\n\t};\r\n\r\n\t// Go to the end state if fx are off\r\n\tif ( jQuery.fx.off ) {\r\n\t\topt.duration = 0;\r\n\r\n\t} else {\r\n\t\tif ( typeof opt.duration !== \"number\" ) {\r\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\r\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\r\n\tif ( opt.queue == null || opt.queue === true ) {\r\n\t\topt.queue = \"fx\";\r\n\t}\r\n\r\n\t// Queueing\r\n\topt.old = opt.complete;\r\n\r\n\topt.complete = function() {\r\n\t\tif ( isFunction( opt.old ) ) {\r\n\t\t\topt.old.call( this );\r\n\t\t}\r\n\r\n\t\tif ( opt.queue ) {\r\n\t\t\tjQuery.dequeue( this, opt.queue );\r\n\t\t}\r\n\t};\r\n\r\n\treturn opt;\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfadeTo: function( speed, to, easing, callback ) {\r\n\r\n\t\t// Show any hidden elements after setting opacity to 0\r\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\r\n\r\n\t\t\t// Animate to the value specified\r\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\r\n\t},\r\n\tanimate: function( prop, speed, easing, callback ) {\r\n\t\tvar empty = jQuery.isEmptyObject( prop ),\r\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\r\n\t\t\tdoAnimation = function() {\r\n\r\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\r\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n\t\t\t\t// Empty animations, or finishing resolves immediately\r\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\r\n\t\t\t\t\tanim.stop( true );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdoAnimation.finish = doAnimation;\r\n\r\n\t\treturn empty || optall.queue === false ?\r\n\t\t\tthis.each( doAnimation ) :\r\n\t\t\tthis.queue( optall.queue, doAnimation );\r\n\t},\r\n\tstop: function( type, clearQueue, gotoEnd ) {\r\n\t\tvar stopQueue = function( hooks ) {\r\n\t\t\tvar stop = hooks.stop;\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tstop( gotoEnd );\r\n\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tgotoEnd = clearQueue;\r\n\t\t\tclearQueue = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\tif ( clearQueue && type !== false ) {\r\n\t\t\tthis.queue( type || \"fx\", [] );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar dequeue = true,\r\n\t\t\t\tindex = type != null && type + \"queueHooks\",\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tdata = dataPriv.get( this );\r\n\r\n\t\t\tif ( index ) {\r\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\r\n\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( index in data ) {\r\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n\t\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this &&\r\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\r\n\r\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\r\n\t\t\t\t\tdequeue = false;\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start the next in the queue if the last step wasn't forced.\r\n\t\t\t// Timers currently will call their complete callbacks, which\r\n\t\t\t// will dequeue but only if they were gotoEnd.\r\n\t\t\tif ( dequeue || !gotoEnd ) {\r\n\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tfinish: function( type ) {\r\n\t\tif ( type !== false ) {\r\n\t\t\ttype = type || \"fx\";\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tvar index,\r\n\t\t\t\tdata = dataPriv.get( this ),\r\n\t\t\t\tqueue = data[ type + \"queue\" ],\r\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tlength = queue ? queue.length : 0;\r\n\r\n\t\t\t// Enable finishing flag on private data\r\n\t\t\tdata.finish = true;\r\n\r\n\t\t\t// Empty the queue first\r\n\t\t\tjQuery.queue( this, type, [] );\r\n\r\n\t\t\tif ( hooks && hooks.stop ) {\r\n\t\t\t\thooks.stop.call( this, true );\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any active animations, and finish them\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n\t\t\t\t\ttimers[ index ].anim.stop( true );\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any animations in the old queue and finish them\r\n\t\t\tfor ( index = 0; index < length; index++ ) {\r\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\r\n\t\t\t\t\tqueue[ index ].finish.call( this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off finishing flag\r\n\t\t\tdelete data.finish;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n\tvar cssFn = jQuery.fn[ name ];\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn speed == null || typeof speed === \"boolean\" ?\r\n\t\t\tcssFn.apply( this, arguments ) :\r\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\r\n\t};\r\n} );\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each( {\r\n\tslideDown: genFx( \"show\" ),\r\n\tslideUp: genFx( \"hide\" ),\r\n\tslideToggle: genFx( \"toggle\" ),\r\n\tfadeIn: { opacity: \"show\" },\r\n\tfadeOut: { opacity: \"hide\" },\r\n\tfadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn this.animate( props, speed, easing, callback );\r\n\t};\r\n} );\r\n\r\njQuery.timers = [];\r\njQuery.fx.tick = function() {\r\n\tvar timer,\r\n\t\ti = 0,\r\n\t\ttimers = jQuery.timers;\r\n\r\n\tfxNow = Date.now();\r\n\r\n\tfor ( ; i < timers.length; i++ ) {\r\n\t\ttimer = timers[ i ];\r\n\r\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\r\n\t\tif ( !timer() && timers[ i ] === timer ) {\r\n\t\t\ttimers.splice( i--, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !timers.length ) {\r\n\t\tjQuery.fx.stop();\r\n\t}\r\n\tfxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n\tjQuery.timers.push( timer );\r\n\tjQuery.fx.start();\r\n};\r\n\r\njQuery.fx.interval = 13;\r\njQuery.fx.start = function() {\r\n\tif ( inProgress ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tinProgress = true;\r\n\tschedule();\r\n};\r\n\r\njQuery.fx.stop = function() {\r\n\tinProgress = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n\tslow: 600,\r\n\tfast: 200,\r\n\r\n\t// Default speed\r\n\t_default: 400\r\n};\r\n\r\n\r\n// Based off of the plugin by Clint Helfers, with permission.\r\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\r\njQuery.fn.delay = function( time, type ) {\r\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n\ttype = type || \"fx\";\r\n\r\n\treturn this.queue( type, function( next, hooks ) {\r\n\t\tvar timeout = window.setTimeout( next, time );\r\n\t\thooks.stop = function() {\r\n\t\t\twindow.clearTimeout( timeout );\r\n\t\t};\r\n\t} );\r\n};\r\n\r\n\r\n( function() {\r\n\tvar input = document.createElement( \"input\" ),\r\n\t\tselect = document.createElement( \"select\" ),\r\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\r\n\r\n\tinput.type = \"checkbox\";\r\n\r\n\t// Support: Android <=4.3 only\r\n\t// Default value for a checkbox should be \"on\"\r\n\tsupport.checkOn = input.value !== \"\";\r\n\r\n\t// Support: IE <=11 only\r\n\t// Must access selectedIndex to make default options select\r\n\tsupport.optSelected = opt.selected;\r\n\r\n\t// Support: IE <=11 only\r\n\t// An input loses its value after becoming a radio\r\n\tinput = document.createElement( \"input\" );\r\n\tinput.value = \"t\";\r\n\tinput.type = \"radio\";\r\n\tsupport.radioValue = input.value === \"t\";\r\n} )();\r\n\r\n\r\nvar boolHook,\r\n\tattrHandle = jQuery.expr.attrHandle;\r\n\r\njQuery.fn.extend( {\r\n\tattr: function( name, value ) {\r\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveAttr: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.removeAttr( this, name );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tattr: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set attributes on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fallback to prop when attributes are not supported\r\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\r\n\t\t\treturn jQuery.prop( elem, name, value );\r\n\t\t}\r\n\r\n\t\t// Attribute hooks are determined by the lowercase version\r\n\t\t// Grab necessary hook if one is defined\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\r\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( value === null ) {\r\n\t\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\telem.setAttribute( name, value + \"\" );\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tret = jQuery.find.attr( elem, name );\r\n\r\n\t\t// Non-existent attributes return null, we normalize to undefined\r\n\t\treturn ret == null ? undefined : ret;\r\n\t},\r\n\r\n\tattrHooks: {\r\n\t\ttype: {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\r\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\r\n\t\t\t\t\tvar val = elem.value;\r\n\t\t\t\t\telem.setAttribute( \"type\", value );\r\n\t\t\t\t\tif ( val ) {\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveAttr: function( elem, value ) {\r\n\t\tvar name,\r\n\t\t\ti = 0,\r\n\r\n\t\t\t// Attribute names can contain non-HTML whitespace characters\r\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\r\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\r\n\r\n\t\tif ( attrNames && elem.nodeType === 1 ) {\r\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\r\n\t\t\t\telem.removeAttribute( name );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Hooks for boolean attributes\r\nboolHook = {\r\n\tset: function( elem, value, name ) {\r\n\t\tif ( value === false ) {\r\n\r\n\t\t\t// Remove boolean attributes when set to false\r\n\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t} else {\r\n\t\t\telem.setAttribute( name, name );\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\n\r\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\r\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\r\n\r\n\tattrHandle[ name ] = function( elem, name, isXML ) {\r\n\t\tvar ret, handle,\r\n\t\t\tlowercaseName = name.toLowerCase();\r\n\r\n\t\tif ( !isXML ) {\r\n\r\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\r\n\t\t\thandle = attrHandle[ lowercaseName ];\r\n\t\t\tattrHandle[ lowercaseName ] = ret;\r\n\t\t\tret = getter( elem, name, isXML ) != null ?\r\n\t\t\t\tlowercaseName :\r\n\t\t\t\tnull;\r\n\t\t\tattrHandle[ lowercaseName ] = handle;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// Support: IE <=9 - 11 only\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n\t\t\t\t// Use proper attribute retrieval(#12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\tif ( tabindex ) {\r\n\t\t\t\t\treturn parseInt( tabindex, 10 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\r\n\t\t\t\t\telem.href\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\n// Support: IE <=11 only\r\n// Accessing the selectedIndex property\r\n// forces the browser to respect setting selected\r\n// on the option\r\n// The getter ensures a default option is selected\r\n// when in an optgroup\r\n// eslint rule \"no-unused-expressions\" is disabled for this code\r\n// since it considers such accessions noop\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\r\n\t\t\t/* eslint no-unused-expressions: \"off\" */\r\n\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tset: function( elem ) {\r\n\r\n\t\t\t/* eslint no-unused-expressions: \"off\" */\r\n\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent ) {\r\n\t\t\t\tparent.selectedIndex;\r\n\r\n\t\t\t\tif ( parent.parentNode ) {\r\n\t\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n\r\n\r\n\r\n\t// Strip and collapse whitespace according to HTML spec\r\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\r\n\tfunction stripAndCollapse( value ) {\r\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\r\n\t\treturn tokens.join( \" \" );\r\n\t}\r\n\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\nfunction classesToArray( value ) {\r\n\tif ( Array.isArray( value ) ) {\r\n\t\treturn value;\r\n\t}\r\n\tif ( typeof value === \"string\" ) {\r\n\t\treturn value.match( rnothtmlwhite ) || [];\r\n\t}\r\n\treturn [];\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tclasses = classesToArray( value );\r\n\r\n\t\tif ( classes.length ) {\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += clazz + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tclasses = classesToArray( value );\r\n\r\n\t\tif ( classes.length ) {\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar type = typeof value,\r\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tif ( isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar className, i, self, classNames;\r\n\r\n\t\t\tif ( isValidValue ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\ti = 0;\r\n\t\t\t\tself = jQuery( this );\r\n\t\t\t\tclassNames = classesToArray( value );\r\n\r\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar rreturn = /\\r/g;\r\n\r\njQuery.fn.extend( {\r\n\tval: function( value ) {\r\n\t\tvar hooks, ret, valueIsFunction,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\tif ( elem ) {\r\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\r\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n\t\t\t\tif ( hooks &&\r\n\t\t\t\t\t\"get\" in hooks &&\r\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tret = elem.value;\r\n\r\n\t\t\t\t// Handle most common string cases\r\n\t\t\t\tif ( typeof ret === \"string\" ) {\r\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle cases where value is null/undef or number\r\n\t\t\t\treturn ret == null ? \"\" : ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvalueIsFunction = isFunction( value );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tvar val;\r\n\r\n\t\t\tif ( this.nodeType !== 1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( valueIsFunction ) {\r\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\r\n\t\t\t} else {\r\n\t\t\t\tval = value;\r\n\t\t\t}\r\n\r\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = \"\";\r\n\r\n\t\t\t} else if ( typeof val === \"number\" ) {\r\n\t\t\t\tval += \"\";\r\n\r\n\t\t\t} else if ( Array.isArray( val ) ) {\r\n\t\t\t\tval = jQuery.map( val, function( value ) {\r\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n\t\t\t// If set returns undefined, fall back to normal setting\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n\t\t\t\tthis.value = val;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tvalHooks: {\r\n\t\toption: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\r\n\t\t\t\treturn val != null ?\r\n\t\t\t\t\tval :\r\n\r\n\t\t\t\t\t// Support: IE <=10 - 11 only\r\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\r\n\t\t\t\t\t// Strip and collapse whitespace\r\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\r\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\tget: function( elem ) {\r\n\t\t\t\tvar value, option, i,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tindex = elem.selectedIndex,\r\n\t\t\t\t\tone = elem.type === \"select-one\",\r\n\t\t\t\t\tvalues = one ? null : [],\r\n\t\t\t\t\tmax = one ? index + 1 : options.length;\r\n\r\n\t\t\t\tif ( index < 0 ) {\r\n\t\t\t\t\ti = max;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti = one ? index : 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loop through all the selected options\r\n\t\t\t\tfor ( ; i < max; i++ ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t// Support: IE <=9 only\r\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\r\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\r\n\r\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\r\n\t\t\t\t\t\t\t!option.disabled &&\r\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\r\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n\t\t\t\t\t\t// Get the specific value for the option\r\n\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n\r\n\t\t\t\t\t\t// We don't need an array for one selects\r\n\t\t\t\t\t\tif ( one ) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Multi-Selects return an array\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar optionSet, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\r\n\t\t\t\t\ti = options.length;\r\n\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t/* eslint-disable no-cond-assign */\r\n\r\n\t\t\t\t\tif ( option.selected =\r\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\toptionSet = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* eslint-enable no-cond-assign */\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\r\n\t\t\t\tif ( !optionSet ) {\r\n\t\t\t\t\telem.selectedIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Radios and checkboxes getter/setter\r\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\r\n\tjQuery.valHooks[ this ] = {\r\n\t\tset: function( elem, value ) {\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif ( !support.checkOn ) {\r\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\r\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Return jQuery for attributes-only inclusion\r\n\r\n\r\nsupport.focusin = \"onfocusin\" in window;\r\n\r\n\r\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\r\n\tstopPropagationCallback = function( e ) {\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\njQuery.extend( jQuery.event, {\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\r\n\r\n\t\tcur = lastElement = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\r\n\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split( \".\" );\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join( \".\" );\r\n\t\tevent.rnamespace = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tlastElement = cur;\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\r\n\t\t\t\tdataPriv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( ( !special._default ||\r\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\r\n\t\t\t\tacceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\r\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\r\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\r\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem[ type ]();\r\n\r\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\r\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\t// Piggyback on a donor event to simulate a different one\r\n\t// Used only for `focus(in | out)` events\r\n\tsimulate: function( type, elem, event ) {\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tjQuery.event.trigger( e, null, elem );\r\n\t}\r\n\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t} );\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[ 0 ];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\n// Support: Firefox <=44\r\n// Firefox doesn't have focus(in | out) events\r\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\r\n//\r\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\r\n// focus(in | out) events fire after focus & blur events,\r\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\r\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\r\nif ( !support.focusin ) {\r\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\r\n\t\tvar handler = function( event ) {\r\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\r\n\t\t};\r\n\r\n\t\tjQuery.event.special[ fix ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\r\n\t\t\t\t\tdataPriv.remove( doc, fix );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n}\r\nvar location = window.location;\r\n\r\nvar nonce = Date.now();\r\n\r\nvar rquery = ( /\\?/ );\r\n\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE 9 - 11 only\r\n\t// IE throws on parseFromString with invalid input.\r\n\ttry {\r\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {\r\n\t\txml = undefined;\r\n\t}\r\n\r\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + data );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( Array.isArray( obj ) ) {\r\n\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams(\r\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\r\n\t\t\t\t\tv,\r\n\t\t\t\t\ttraditional,\r\n\t\t\t\t\tadd\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\r\n\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, valueOrFunction ) {\r\n\r\n\t\t\t// If value is a function, invoke it and use its return value\r\n\t\t\tvar value = isFunction( valueOrFunction ) ?\r\n\t\t\t\tvalueOrFunction() :\r\n\t\t\t\tvalueOrFunction;\r\n\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\r\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\r\n\t\t};\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t} );\r\n\r\n\t} else {\r\n\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map( function() {\r\n\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t} )\r\n\t\t.filter( function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t} )\r\n\t\t.map( function( i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\treturn jQuery.map( val, function( val ) {\r\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t} ).get();\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\tr20 = /%20/g,\r\n\trhash = /#.*$/,\r\n\trantiCache = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\r\n\t// #7653, #8125, #8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat( \"*\" ),\r\n\r\n\t// Anchor tag for parsing the document origin\r\n\toriginAnchor = document.createElement( \"a\" );\r\n\toriginAnchor.href = location.href;\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\r\n\r\n\t\tif ( isFunction( func ) ) {\r\n\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\r\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s.throws ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\r\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: location.href,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /\\bxml\\b/,\r\n\t\t\thtml: /\\bhtml/,\r\n\t\t\tjson: /\\bjson\\b/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": JSON.parse,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\r\n\t\t\t// Url cleanup var\r\n\t\t\turlAnchor,\r\n\r\n\t\t\t// Request state (becomes false upon send and true upon completion)\r\n\t\t\tcompleted,\r\n\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\r\n\t\t\t// uncached part of the url\r\n\t\t\tuncached,\r\n\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context &&\r\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\t\tjQuery.event,\r\n\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( completed ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn completed ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tif ( completed == null ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\r\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( completed == null ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( completed ) {\r\n\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR );\r\n\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\r\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket #12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\turlAnchor = document.createElement( \"a\" );\r\n\r\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\r\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\r\n\t\t\t// e.g. http://example.com:80x/\r\n\t\t\ttry {\r\n\t\t\t\turlAnchor.href = s.url;\r\n\r\n\t\t\t\t// Support: IE <=8 - 11 only\r\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\r\n\t\t\t\turlAnchor.href = urlAnchor.href;\r\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\r\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\r\n\t\t\t\t// it can be rejected by the transport if it is invalid\r\n\t\t\t\ts.crossDomain = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( completed ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\r\n\t\tfireGlobals = jQuery.event && s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\t// Remove hash to simplify url manipulation\r\n\t\tcacheURL = s.url.replace( rhash, \"\" );\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// Remember the hash so we can put it back\r\n\t\t\tuncached = s.url.slice( cacheURL.length );\r\n\r\n\t\t\t// If data is available and should be processed, append data to url\r\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\r\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\r\n\r\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add or update anti-cache param if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\r\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\r\n\t\t\t}\r\n\r\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\r\n\t\t\ts.url = cacheURL + uncached;\r\n\r\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\r\n\t\t} else if ( s.data && s.processData &&\r\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\r\n\t\t\ts.data = s.data.replace( r20, \"+\" );\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\r\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend &&\r\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\r\n\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// Aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tcompleteDeferred.add( s.complete );\r\n\t\tjqXHR.done( s.success );\r\n\t\tjqXHR.fail( s.error );\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\r\n\t\t\t// If request was aborted inside ajaxSend, stop there\r\n\t\t\tif ( completed ) {\r\n\t\t\t\treturn jqXHR;\r\n\t\t\t}\r\n\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\r\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tcompleted = false;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// Rethrow post-completion exceptions\r\n\t\t\t\tif ( completed ) {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Propagate others as results\r\n\t\t\t\tdone( -1, e );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Ignore repeat invocations\r\n\t\t\tif ( completed ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcompleted = true;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\twindow.clearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\r\n\t\t// Shift arguments if data argument was omitted\r\n\t\tif ( isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\t// The url can be an options object (which then must have .url)\r\n\t\treturn jQuery.ajax( jQuery.extend( {\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t}, jQuery.isPlainObject( url ) && url ) );\r\n\t};\r\n} );\r\n\r\n\r\njQuery._evalUrl = function( url ) {\r\n\treturn jQuery.ajax( {\r\n\t\turl: url,\r\n\r\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\r\n\t\ttype: \"GET\",\r\n\t\tdataType: \"script\",\r\n\t\tcache: true,\r\n\t\tasync: false,\r\n\t\tglobal: false,\r\n\t\t\"throws\": true\r\n\t} );\r\n};\r\n\r\n\r\njQuery.fn.extend( {\r\n\twrapAll: function( html ) {\r\n\t\tvar wrap;\r\n\r\n\t\tif ( this[ 0 ] ) {\r\n\t\t\tif ( isFunction( html ) ) {\r\n\t\t\t\thtml = html.call( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\t// The elements to wrap the target around\r\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n\t\t\tif ( this[ 0 ].parentNode ) {\r\n\t\t\t\twrap.insertBefore( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\twrap.map( function() {\r\n\t\t\t\tvar elem = this;\r\n\r\n\t\t\t\twhile ( elem.firstElementChild ) {\r\n\t\t\t\t\telem = elem.firstElementChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn elem;\r\n\t\t\t} ).append( this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twrapInner: function( html ) {\r\n\t\tif ( isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar self = jQuery( this ),\r\n\t\t\t\tcontents = self.contents();\r\n\r\n\t\t\tif ( contents.length ) {\r\n\t\t\t\tcontents.wrapAll( html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tself.append( html );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\twrap: function( html ) {\r\n\t\tvar htmlIsFunction = isFunction( html );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n\t\t} );\r\n\t},\r\n\r\n\tunwrap: function( selector ) {\r\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\r\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n\t\t} );\r\n\t\treturn this;\r\n\t}\r\n} );\r\n\r\n\r\njQuery.expr.pseudos.hidden = function( elem ) {\r\n\treturn !jQuery.expr.pseudos.visible( elem );\r\n};\r\njQuery.expr.pseudos.visible = function( elem ) {\r\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n};\r\n\r\n\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE <=9 only\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\r\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE 9 only\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\r\njQuery.ajaxPrefilter( function( s ) {\r\n\tif ( s.crossDomain ) {\r\n\t\ts.contents.script = false;\r\n\t}\r\n} );\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup( {\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, \" +\r\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /\\b(?:java|ecma)script\\b/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n} );\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\r\n\t// This transport only deals with cross domain requests\r\n\tif ( s.crossDomain ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\r\n\t\t\t\t\tcharset: s.scriptCharset,\r\n\t\t\t\t\tsrc: s.url\r\n\t\t\t\t} ).on(\r\n\t\t\t\t\t\"load error\",\r\n\t\t\t\t\tcallback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup( {\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n} );\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" &&\r\n\t\t\t\t( s.contentType || \"\" )\r\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\r\n\t\t\t\trjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[ \"script json\" ] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// Force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always( function() {\r\n\r\n\t\t\t// If previous value didn't exist - remove it\r\n\t\t\tif ( overwritten === undefined ) {\r\n\t\t\t\tjQuery( window ).removeProp( callbackName );\r\n\r\n\t\t\t// Otherwise restore preexisting value\r\n\t\t\t} else {\r\n\t\t\t\twindow[ callbackName ] = overwritten;\r\n\t\t\t}\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\r\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// Save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t} );\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Support: Safari 8 only\r\n// In Safari 8 documents created via document.implementation.createHTMLDocument\r\n// collapse sibling forms: the second one becomes a child of the first one.\r\n// Because of that, this security measure has to be disabled in Safari 8.\r\n// https://bugs.webkit.org/show_bug.cgi?id=137337\r\nsupport.createHTMLDocument = ( function() {\r\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\r\n\tbody.innerHTML = \"<form></form><form></form>\";\r\n\treturn body.childNodes.length === 2;\r\n} )();\r\n\r\n\r\n// Argument \"data\" should be string of html\r\n// context (optional): If specified, the fragment will be created in this context,\r\n// defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( typeof data !== \"string\" ) {\r\n\t\treturn [];\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\r\n\tvar base, parsed, scripts;\r\n\r\n\tif ( !context ) {\r\n\r\n\t\t// Stop scripts or inline event handlers from being executed immediately\r\n\t\t// by using document.implementation\r\n\t\tif ( support.createHTMLDocument ) {\r\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\r\n\r\n\t\t\t// Set the base href for the created document\r\n\t\t\t// so any parsed elements with URLs\r\n\t\t\t// are based on the document's URL (gh-2965)\r\n\t\t\tbase = context.createElement( \"base\" );\r\n\t\t\tbase.href = document.location.href;\r\n\t\t\tcontext.head.appendChild( base );\r\n\t\t} else {\r\n\t\t\tcontext = document;\r\n\t\t}\r\n\t}\r\n\r\n\tparsed = rsingleTag.exec( data );\r\n\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n\t}\r\n\r\n\tparsed = buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf( \" \" );\r\n\r\n\tif ( off > -1 ) {\r\n\t\tselector = stripAndCollapse( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax( {\r\n\t\t\turl: url,\r\n\r\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\r\n\t\t\t// Make value of this field explicit since\r\n\t\t\t// user can override it through ajaxSetup method\r\n\t\t\ttype: type || \"GET\",\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t} ).done( function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\r\n\t\t// but they are ignored because response was set above.\r\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\r\n\t\t} ).always( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( function() {\r\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( [\r\n\t\"ajaxStart\",\r\n\t\"ajaxStop\",\r\n\t\"ajaxComplete\",\r\n\t\"ajaxError\",\r\n\t\"ajaxSuccess\",\r\n\t\"ajaxSend\"\r\n], function( i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.expr.pseudos.animated = function( elem ) {\r\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n\t\treturn elem === fn.elem;\r\n\t} ).length;\r\n};\r\n\r\n\r\n\r\n\r\njQuery.offset = {\r\n\tsetOffset: function( elem, options, i ) {\r\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\r\n\t\t\tposition = jQuery.css( elem, \"position\" ),\r\n\t\t\tcurElem = jQuery( elem ),\r\n\t\t\tprops = {};\r\n\r\n\t\t// Set position first, in-case top/left are set even on static elem\r\n\t\tif ( position === \"static\" ) {\r\n\t\t\telem.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\tcurOffset = curElem.offset();\r\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\r\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\r\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\r\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\r\n\r\n\t\t// Need to be able to calculate position if either\r\n\t\t// top or left is auto and position is either absolute or fixed\r\n\t\tif ( calculatePosition ) {\r\n\t\t\tcurPosition = curElem.position();\r\n\t\t\tcurTop = curPosition.top;\r\n\t\t\tcurLeft = curPosition.left;\r\n\r\n\t\t} else {\r\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n\t\t}\r\n\r\n\t\tif ( isFunction( options ) ) {\r\n\r\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n\t\t}\r\n\r\n\t\tif ( options.top != null ) {\r\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n\t\t}\r\n\t\tif ( options.left != null ) {\r\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n\t\t}\r\n\r\n\t\tif ( \"using\" in options ) {\r\n\t\t\toptions.using.call( elem, props );\r\n\r\n\t\t} else {\r\n\t\t\tcurElem.css( props );\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.fn.extend( {\r\n\r\n\t// offset() relates an element's border box to the document origin\r\n\toffset: function( options ) {\r\n\r\n\t\t// Preserve chaining for setter\r\n\t\tif ( arguments.length ) {\r\n\t\t\treturn options === undefined ?\r\n\t\t\t\tthis :\r\n\t\t\t\tthis.each( function( i ) {\r\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tvar rect, win,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !elem ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\r\n\t\t// Support: IE <=11 only\r\n\t\t// Running getBoundingClientRect on a\r\n\t\t// disconnected node in IE throws an error\r\n\t\tif ( !elem.getClientRects().length ) {\r\n\t\t\treturn { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\r\n\t\trect = elem.getBoundingClientRect();\r\n\t\twin = elem.ownerDocument.defaultView;\r\n\t\treturn {\r\n\t\t\ttop: rect.top + win.pageYOffset,\r\n\t\t\tleft: rect.left + win.pageXOffset\r\n\t\t};\r\n\t},\r\n\r\n\t// position() relates an element's margin box to its offset parent's padding box\r\n\t// This corresponds to the behavior of CSS absolute positioning\r\n\tposition: function() {\r\n\t\tif ( !this[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar offsetParent, offset, doc,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tparentOffset = { top: 0, left: 0 };\r\n\r\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\r\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n\r\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\r\n\t\t\toffset = elem.getBoundingClientRect();\r\n\r\n\t\t} else {\r\n\t\t\toffset = this.offset();\r\n\r\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\r\n\t\t\t// when a statically positioned element is identified\r\n\t\t\tdoc = elem.ownerDocument;\r\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\r\n\t\t\twhile ( offsetParent &&\r\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\r\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\r\n\t\t\t\toffsetParent = offsetParent.parentNode;\r\n\t\t\t}\r\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\r\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\r\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\r\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Subtract parent offsets and element margins\r\n\t\treturn {\r\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\r\n\t\t};\r\n\t},\r\n\r\n\t// This method will return documentElement in the following cases:\r\n\t// 1) For the element inside the iframe without offsetParent, this method will return\r\n\t//    documentElement of the parent window\r\n\t// 2) For the hidden or detached element\r\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n\t//\r\n\t// but those exceptions were never presented as a real life use-cases\r\n\t// and might be considered as more preferable results.\r\n\t//\r\n\t// This logic, however, is not guaranteed and can change at any point in the future\r\n\toffsetParent: function() {\r\n\t\treturn this.map( function() {\r\n\t\t\tvar offsetParent = this.offsetParent;\r\n\r\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\treturn offsetParent || documentElement;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\r\n\tvar top = \"pageYOffset\" === prop;\r\n\r\n\tjQuery.fn[ method ] = function( val ) {\r\n\t\treturn access( this, function( elem, method, val ) {\r\n\r\n\t\t\t// Coalesce documents and windows\r\n\t\t\tvar win;\r\n\t\t\tif ( isWindow( elem ) ) {\r\n\t\t\t\twin = elem;\r\n\t\t\t} else if ( elem.nodeType === 9 ) {\r\n\t\t\t\twin = elem.defaultView;\r\n\t\t\t}\r\n\r\n\t\t\tif ( val === undefined ) {\r\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( win ) {\r\n\t\t\t\twin.scrollTo(\r\n\t\t\t\t\t!top ? val : win.pageXOffset,\r\n\t\t\t\t\ttop ? val : win.pageYOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\t\t\t\telem[ method ] = val;\r\n\t\t\t}\r\n\t\t}, method, val, arguments.length );\r\n\t};\r\n} );\r\n\r\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\r\n// Add the top/left cssHooks using jQuery.fn.position\r\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\r\n// getComputedStyle returns percent when specified for top/left/bottom/right;\r\n// rather than make the css module depend on the offset module, just check for it here\r\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n\t\tfunction( elem, computed ) {\r\n\t\t\tif ( computed ) {\r\n\t\t\t\tcomputed = curCSS( elem, prop );\r\n\r\n\t\t\t\t// If curCSS returns percentage, fallback to offset\r\n\t\t\t\treturn rnumnonpx.test( computed ) ?\r\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\r\n\t\t\t\t\tcomputed;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n} );\r\n\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\r\n\t\tfunction( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\r\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\r\n\t\t\t\t\t\telem[ \"inner\" + name ] :\r\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\n\r\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\r\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\r\n\tfunction( i, name ) {\r\n\r\n\t// Handle event binding\r\n\tjQuery.fn[ name ] = function( data, fn ) {\r\n\t\treturn arguments.length > 0 ?\r\n\t\t\tthis.on( name, null, data, fn ) :\r\n\t\t\tthis.trigger( name );\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\thover: function( fnOver, fnOut ) {\r\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.fn.extend( {\r\n\r\n\tbind: function( types, data, fn ) {\r\n\t\treturn this.on( types, null, data, fn );\r\n\t},\r\n\tunbind: function( types, fn ) {\r\n\t\treturn this.off( types, null, fn );\r\n\t},\r\n\r\n\tdelegate: function( selector, types, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn );\r\n\t},\r\n\tundelegate: function( selector, types, fn ) {\r\n\r\n\t\t// ( namespace ) or ( selector, types [, fn] )\r\n\t\treturn arguments.length === 1 ?\r\n\t\t\tthis.off( selector, \"**\" ) :\r\n\t\t\tthis.off( types, selector || \"**\", fn );\r\n\t}\r\n} );\r\n\r\n// Bind a function to a context, optionally partially applying any\r\n// arguments.\r\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\r\n// However, it is not slated for removal any time soon\r\njQuery.proxy = function( fn, context ) {\r\n\tvar tmp, args, proxy;\r\n\r\n\tif ( typeof context === \"string\" ) {\r\n\t\ttmp = fn[ context ];\r\n\t\tcontext = fn;\r\n\t\tfn = tmp;\r\n\t}\r\n\r\n\t// Quick check to determine if target is callable, in the spec\r\n\t// this throws a TypeError, but we will just return undefined.\r\n\tif ( !isFunction( fn ) ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t// Simulated bind\r\n\targs = slice.call( arguments, 2 );\r\n\tproxy = function() {\r\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t};\r\n\r\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\treturn proxy;\r\n};\r\n\r\njQuery.holdReady = function( hold ) {\r\n\tif ( hold ) {\r\n\t\tjQuery.readyWait++;\r\n\t} else {\r\n\t\tjQuery.ready( true );\r\n\t}\r\n};\r\njQuery.isArray = Array.isArray;\r\njQuery.parseJSON = JSON.parse;\r\njQuery.nodeName = nodeName;\r\njQuery.isFunction = isFunction;\r\njQuery.isWindow = isWindow;\r\njQuery.camelCase = camelCase;\r\njQuery.type = toType;\r\n\r\njQuery.now = Date.now;\r\n\r\njQuery.isNumeric = function( obj ) {\r\n\r\n\t// As of jQuery 3.0, isNumeric is limited to\r\n\t// strings and numbers (primitives or objects)\r\n\t// that can be coerced to finite numbers (gh-2662)\r\n\tvar type = jQuery.type( obj );\r\n\treturn ( type === \"number\" || type === \"string\" ) &&\r\n\r\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\t!isNaN( obj - parseFloat( obj ) );\r\n};\r\n\r\n\r\n\r\n\r\n// Register as a named AMD module, since jQuery can be concatenated with other\r\n// files that may use define, but not via a proper concatenation script that\r\n// understands anonymous AMD modules. A named AMD is safest and most robust\r\n// way to register. Lowercase jquery is used because AMD module names are\r\n// derived from file names, and jQuery is normally delivered in a lowercase\r\n// file name. Do this after creating the global so that if an AMD module wants\r\n// to call noConflict to hide this version of jQuery, it will work.\r\n\r\n// Note that for maximum portability, libraries that are not jQuery should\r\n// declare themselves as anonymous modules, and avoid setting a global if an\r\n// AMD loader is present. jQuery is a special case. For more information, see\r\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n\r\nif ( typeof define === \"function\" && define.amd ) {\r\n\tdefine( \"jquery\", [], function() {\r\n\t\treturn jQuery;\r\n\t} );\r\n}\r\n\r\n\r\n\r\n\r\nvar\r\n\r\n\t// Map over jQuery in case of overwrite\r\n\t_jQuery = window.jQuery,\r\n\r\n\t// Map over the $ in case of overwrite\r\n\t_$ = window.$;\r\n\r\njQuery.noConflict = function( deep ) {\r\n\tif ( window.$ === jQuery ) {\r\n\t\twindow.$ = _$;\r\n\t}\r\n\r\n\tif ( deep && window.jQuery === jQuery ) {\r\n\t\twindow.jQuery = _jQuery;\r\n\t}\r\n\r\n\treturn jQuery;\r\n};\r\n\r\n// Expose jQuery and $ identifiers, even in AMD\r\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n// and CommonJS for browser emulators (#13566)\r\nif ( !noGlobal ) {\r\n\twindow.jQuery = window.$ = jQuery;\r\n}\r\n\r\n\r\n\r\n\r\nreturn jQuery;\r\n} );\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign({}, defaults, opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n","// randomly generates a number between the range of low and high\r\nfunction getRandom(low = 1, high = 10) {\r\n\tlet randomNumber;\r\n\t// calculate random number\r\n    randomNumber = Math.floor(Math.random() * (high - low)) + low;\r\n\t// return random number\r\n\treturn randomNumber;\r\n}\r\n\r\nfunction addKey(functionToCall, myKeyCode = 13) {\r\n    // wire up event listener\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        // is the key released the provided key? Check keyCode via Event object\r\n        if (e.keyCode === myKeyCode) {\r\n            // pressing the enter key will force some browsers to refresh\r\n            // this command stops the event from going further\r\n            e.preventDefault();\r\n            // call provided callback to do everything else that needs to be done\r\n            functionToCall();\r\n            // this also helps the event from propagating in some browsers\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\r\n// ----------------------------------------- challenge solution\r\nfunction getXMLData(retrieveScript, success, failure) {\r\n    // send out AJAX request\r\n    let xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.addEventListener(\"load\", (e) => {\r\n        // has the response been received successfully?\r\n        if (xmlhttp.status == 200) {\r\n            // data retrieved - call success method and pass along XML object response\r\n            success(xmlhttp.responseXML);\r\n        } else {\r\n            failure();\r\n        }\r\n    });\r\n    xmlhttp.addEventListener(\"error\", (e) => {\r\n        failure();\r\n    });\r\n    xmlhttp.open(\"GET\", retrieveScript, true);\r\n    xmlhttp.send();\r\n}\r\n// ------------------------------------------------------------\r\n\r\nexport {getRandom, addKey, getXMLData};","import { Spinner } from \"spin.js\";\r\n// -------------------------------- challenge solution\r\nimport {getXMLData} from \"./Toolkit.js\";\r\n// --------------------------------------------------\r\nimport $ from \"jquery\";\r\n\r\nlet retrieveScript;\r\n// xmlHttpRequest object for carrying out AJAX\r\nlet xmlhttp;\r\nlet xmlObject;\r\n// number of cities in XML\r\nlet citiesCount = 0;\r\n\r\nlet cities;\r\nlet option;\r\nlet listItem;\r\nlet loadingOverlay;\r\n\r\n// weather variables\r\nlet conditions;\r\nlet sunrise;\r\nlet sunset;\r\nlet currentTemp;\r\nlet lowTemp;\r\nlet highTemp;\r\nlet humidity;\r\nlet pressure;\r\nlet windDirectionCode;\r\nlet windDirection;\r\nlet windStrength;\r\nlet windSpeed;\r\n\r\n// construct Spinner object (spin.js) and add to loading-overlay <div> http://spin.js.org/\r\nlet spinner = new Spinner({ color: '#FFFFFF', lines: 12 }).spin(document.getElementsByClassName(\"loading-overlay\")[0]);\r\n\r\n// ------------------------------------------------------- private methods\r\nfunction populateMe() {\r\n    // populate the dropdown menu\r\n    for (let i = 0; i < citiesCount; i++) {\r\n        // create element for dropdown\r\n        option = document.createElement(\"option\");\r\n        let city = xmlObject.getElementsByTagName(\"name\")[i].textContent;\r\n        let province = xmlObject.getElementsByTagName(\"province\")[i].textContent;\r\n        option.text = city + \", \" + province;\r\n\r\n        // add element to cities as a new option\r\n        cities.add(option, null);\r\n    }\r\n\r\n    cities.addEventListener(\"change\", onChanged);\r\n}\r\n\r\nfunction getWeatherData() {\r\n    conditions = xmlObject.getElementsByTagName(\"weather\")[0].getAttribute(\"value\");\r\n    sunrise = xmlObject.getElementsByTagName(\"sun\")[0].getAttribute(\"rise\");\r\n    sunset = xmlObject.getElementsByTagName(\"sun\")[0].getAttribute(\"set\");\r\n    currentTemp = xmlObject.getElementsByTagName(\"temperature\")[0].getAttribute(\"value\");\r\n    lowTemp = xmlObject.getElementsByTagName(\"temperature\")[0].getAttribute(\"min\");\r\n    highTemp = xmlObject.getElementsByTagName(\"temperature\")[0].getAttribute(\"max\");\r\n    humidity = xmlObject.getElementsByTagName(\"humidity\")[0].getAttribute(\"value\");\r\n    pressure = xmlObject.getElementsByTagName(\"pressure\")[0].getAttribute(\"value\");\r\n    windDirectionCode = xmlObject.getElementsByTagName(\"direction\")[0].getAttribute(\"value\");\r\n    windDirection = xmlObject.getElementsByTagName(\"direction\")[0].getAttribute(\"name\");\r\n    windSpeed = xmlObject.getElementsByTagName(\"speed\")[0].getAttribute(\"value\");\r\n    windStrength = xmlObject.getElementsByTagName(\"speed\")[0].getAttribute(\"name\");\r\n    console.log(windDirectionCode.toLowerCase());\r\n}\r\n\r\nfunction convertWeatherData() {\r\n    // sunrise = new Date(sunrise);\r\n    // console.log(\"Converted: \" + sunrise);\r\n    currentTemp -= 273.15;\r\n    lowTemp -= 273.15;\r\n    highTemp -= 273.15;\r\n}\r\n// ------------------------------------------------------- event handlers\r\nfunction onCityDataLoaded(result) {\r\n    // grab the XML response\r\n    xmlObject = result;\r\n    loadingOverlay.style.display = \"none\";\r\n    getWeatherData();\r\n    convertWeatherData();\r\n    console.log(\"Converted: \" + Math.round(currentTemp));\r\n    // conditions = xmlObject.getElementsByTagName(\"weather\")[0].getAttribute(\"value\");\r\n    // sunrise = xmlObject.getElementsByTagName(\"sun\")[0].getAttribute(\"rise\");\r\n    // sunset = xmlObject.getElementsByTagName(\"sun\")[0].getAttribute(\"set\");\r\n    console.log(xmlObject);\r\n    let code = xmlObject.getElementsByTagName(\"weather\")[0].getAttribute(\"number\");\r\n    document.getElementsByClassName(\"info__icon\")[0].innerHTML = `<i class=\"wi wi-owm-${code}\"></i>`;\r\n    document.getElementsByClassName(\"info__conditions\")[0].innerHTML = conditions;\r\n    document.getElementsByClassName(\"info__city\")[0].innerHTML = listItem.textContent;\r\n    document.getElementsByClassName(\"weather__sun__rise\")[0].innerHTML = `<i class=\"wi wi-sunrise\">&nbsp;${sunrise}</i>`;\r\n    document.getElementsByClassName(\"weather__sun__set\")[0].innerHTML = `<i class=\"wi wi-sunset\">&nbsp;${sunset}</i>`;\r\n    document.getElementsByClassName(\"weather__temp__current\")[0].innerHTML = `${Math.round(currentTemp)}<i class=\"wi wi-celsius\"></i>&nbsp;&nbsp;Current`;\r\n    document.getElementsByClassName(\"weather__temp__low\")[0].innerHTML = `${Math.round(lowTemp)}<i class=\"wi wi-celsius\"></i>&nbsp;&nbsp;Low`;\r\n    document.getElementsByClassName(\"weather__temp__high\")[0].innerHTML = `${Math.round(highTemp)}<i class=\"wi wi-celsius\"></i>&nbsp;&nbsp;High`;\r\n    document.getElementsByClassName(\"weather__humidity__value\")[0].innerHTML = `${humidity} %`;\r\n    document.getElementsByClassName(\"weather__pressure__value\")[0].innerHTML = `${pressure} hPa`;\r\n    document.getElementsByClassName(\"weather__wind__icon\")[0].innerHTML = `<i class=\"wi wi-wind towards-${windDirectionCode}-deg\"></i><b>&nbsp;&nbsp;Wind</b>`;\r\n    document.getElementsByClassName(\"weather__wind__direction\")[0].innerHTML = `${windDirection} wind`;\r\n    document.getElementsByClassName(\"weather__wind__strength\")[0].innerHTML = windStrength;\r\n    document.getElementsByClassName(\"weather__wind__speed\")[0].innerHTML = `${windSpeed} km/h speed`;\r\n    console.log(pressure);\r\n   \r\n}\r\n\r\nfunction onLoaded(result) {  \r\n    // grab the XML response\r\n    xmlObject = result;\r\n \r\n    citiesCount = xmlObject.getElementsByTagName(\"city\").length;\r\n    if (citiesCount > 0) {\r\n        populateMe();\r\n        onChanged();\r\n        loadingOverlay.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction onCityNotFound(e) {\r\n    document.getElementsByClassName(\"info__icon\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"info__conditions\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__sun__rise\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__sun__set\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__temp__current\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__temp__low\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__temp__high\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__humidity__value\")[0].innerHTML = \"\";\r\n    document.getElementsByClassName(\"weather__pressure__value\")[0].innerHTML = \"\";\r\n\r\n    document.getElementsByClassName(\"info__city\")[0].innerHTML = \"City not found\".fontcolor(\"red\").italics();\r\n}\r\n\r\nfunction onError(e) {\r\n    console.log(\"*** Error has occured during AJAX data retrieval\");\r\n}\r\n\r\nfunction onChanged(e) {\r\n    // reference to option in cities\r\n    listItem = cities.selectedOptions[0];\r\n    let citySplit = listItem.textContent.split(\",\");\r\n    console.log(listItem.textContent);\r\n    console.log(citySplit[0]);\r\n    retrieveScript = `http://api.openweathermap.org/data/2.5/weather?q=${citySplit[0]},CA&mode=xml&appid=6761afb1468ce2fec9c0b3c67ee37aa2`;\r\n    getXMLData(retrieveScript, onCityDataLoaded, onCityNotFound);\r\n}\r\n\r\n// ------------------------------------------------------- private methods\r\nfunction main() {\r\n    // setup references to controls\r\n    retrieveScript = \"cities.xml\";\r\n    cities = document.getElementById(\"cities\");\r\n    loadingOverlay = document.getElementsByClassName(\"loading-overlay\")[0];\r\n\r\n    // send out AJAX request\r\n    getXMLData(retrieveScript, onLoaded, onError);\r\n    // ----------------------------------------------------------\r\n}\r\n\r\nmain();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}